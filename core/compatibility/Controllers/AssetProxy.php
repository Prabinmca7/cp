<?php

namespace RightNow\Controllers;
use RightNow\Utils\Url,
    RightNow\Utils\Text,
    RightNow\Utils\Config,
    RightNow\Utils\Framework,
    RightNow\Api;

/**
 * Endpoint for serving images that are within incident threads. No need to document this
 * as it isn't something that CP users need to be aware of.
 *
 * @internal
 */
final class AssetProxy extends Base
{
    public function __construct(){
        parent::__construct();
        parent::_setMethodsExemptFromContactLoginRequired(array(
            'get',
        ));
    }

    /**
     * Retrieves an asset by handing a tokengiven it's ID and sends the content to the browser
     * @param string $token Encrypted content_get token generated by printtext
     */
    public function get($token = null){
        if($token === null) {
            Url::redirectToErrorPage(Framework::ILLEGAL_PARAMETER);
            exit();
        }

        $contenGetInputValue = array();
        $contenGetInputValue['token'] = $token;

        if($this->session && Framework::isLoggedIn())
        {
            $contenGetInputValue['c_id'] = $this->session->getProfileData('contactID');
        }

        $contentGetReturnValue = Api::content_manager_content_get($contenGetInputValue);
        $this->processContentGetOutput($contentGetReturnValue);
    }

    /**
     * Utility method to handle the various error codes that
     * come out of the content_get API
     * @param array $contentGetReturnValue API return value to process
     */
    private function processContentGetOutput($contentGetReturnValue) {
        if($contentGetReturnValue === null) {
            Url::redirectToErrorPage(404);
        }

        // Mapping of status codes returned by Api::content_manager_content_get
        // to CP error pages is done according to https://confluence.oraclecorp.com/confluence/display/OSvC/Content+Manager+-+Error+handling
        switch($contentGetReturnValue['status']) {
            case CONTENT_MANAGER_CONTENT_GET_STATUS_OK:
                // Do nothing, all the data has been echoed by content get API
                exit();
            case CONTENT_MANAGER_CONTENT_GET_STATUS_UNAUTHORIZED:
            case CONTENT_MANAGER_CONTENT_GET_STATUS_MALFORMED:
            case CONTENT_MANAGER_CONTENT_GET_STATUS_EXPIRED:
                Url::redirectToErrorPage(Framework::DOCUMENT_PERMISSION);
                break;
            case CONTENT_MANAGER_CONTENT_GET_STATUS_ERROR:
                Url::redirectToErrorPage(500);
                break;
            default:
                Url::redirectToErrorPage(500);
                break;
        }
    }
}

