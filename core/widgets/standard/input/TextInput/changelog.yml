1.8.1:
  release: "24.8"
  entries:
  - account: vasanth.raghunatha@oracle.com
    category: API Change
    changelogID: 815
    date: 07/31/2024
    description: The widget is minor bumped to be compatible with PHP 8.3
    level: minor
    refno: 240724-000047
    sortPosition: Middle
1.7.5:
  release: "19.8"
  entries:
  - account: sheetal.yadav@oracle.com
    category: Bug Fix
    changelogID: 729
    date: 05/10/2019
    description: Disabled require_validation for textarea input field if both 'require_validation'
      and 'textarea' attribute are set to true.
    details:
    - Eleminating console error when both 'require_validation' and 'textarea' attribute
      are set to true by disabling require_validation for textarea input field as
      it is not required.
    level: nano
    refno: 190313-000006
    sortPosition: Middle
1.7.4:
  release: "19.5"
  entries:
  - account: steven.cottrell@oracle.com
    category: Bug Fix
    changelogID: 724
    date: 03/01/2019
    description: Account enumeration AJAX endpoint is moved to the TextInput widget
    details:
    - Custom scripts that make calls to /ci/AjaxRequest/checkForExistingContact to
      check if a given username is already taken must access the new endpoint on a
      TextInput widget.  Calls to that endpoint checking whether a given email address
      is in use are unaffected.
    level: nano
    refno: 180808-000244
    sortPosition: Middle
1.7.3:
  release: "17.5"
  entries:
  - account: milan.pandya
    category: New Feature
    changelogID: 634
    date: 02/23/2017
    description: An on-change event will be fired upon editing widget input field.
    level: nano
    refno: 161005-000174
    sortPosition: Middle
1.7.2:
  release: "16.11"
  entries:
  - account: geoff.kembel@oracle.com
    category: Bug Fix
    changelogID: 522
    date: 06/17/2016
    description: Added sub_id and pre/post blocks to all uses of FieldDisplay widget
    level: nano
    refno: 160511-000189
    sortPosition: Middle
1.7.1:
  release: "16.5"
  entries:
  - account: ramanpreet.dhunna
    category: Bug Fix
    changelogID: 496
    date: 03/23/2016
    description: Added an attribute for tooltip accessibility
    details:
    - Added a new attribute tooltip\_accessibility\_message to inform screen reader
      users on how to access tooltip in case of mask errors. The default value is
      for the standard pageset.
    level: nano
    refno: 160224-000211
    sortPosition: Middle
  - account: andrew.jenkins
    category: Bug Fix
    changelogID: 486
    date: 03/09/2016
    description: Updated widgets using the rn\_Required screenreader text to use a
      more conformant aria-label style of screen reading.
    details:
    - This widget now utilizes the aria-label view-partial functionality for views
      and .ejs files rather than duplicating logic with the rn\_ScreenReader class.  The
      rn\_ScreenReader class causes issues while using iOS VoiceOver on the mobile
      pageset and should be avoided except in cases where absolutely necessary.
    level: minor
    refno: 151217-000173
    sortPosition: Middle
  - account: andrew.jenkins
    category: Bug Fix
    changelogID: 458
    date: 12/17/2015
    description: TextInput now makes use of PoliteFocus
    details:
    - TextInput will now only give initial focus if there is no other content on the
      page that is currently marked as being an alert.
    level: minor
    refno: 150711-000026
    sortPosition: Middle
1.6.1:
  release: "15.11"
  entries:
  - account: jwatson
    category: Bug Fix
    changelogID: 408
    date: 09/23/2015
    description: If a field is read-only, JavaScript will not run.
    details:
    - It was possible to see a JavaScript error if a TextInput field was read-only
      because the JavaScript code was still executed. The constructor of the TextInput
      widget will now return early if the field was rendered as read-only.
    level: minor
    refno: 150625-000083
    sortPosition: Middle
  - account: jwatson
    category: Bug Fix
    changelogID: 403
    date: 09/26/2015
    description: Defaults changed for label\_validation and label\_validation\_incorrect
      attributes to improve messaging in foreign languages
    details:
    - 'The new default value for label\_validation is "Re-enter a value for the field
      ''%s''" (was: "Re-enter %s").'
    - 'The new default value for label\_validation\_incorrect is "Validation for the
      field ''%s'' failed" (was: "%s does not match %s"). Note that there is no longer
      a ''%s'' placeholder for the second field name, which may impact your override
      of the attribute.'
    level: minor
    refno: 150827-000025
    sortPosition: Middle
1.5.1:
  release: "15.8"
  entries:
  - account: jwatson
    category: API Change
    changelogID: 316
    date: 05/11/2015
    description: Modified to support field reloading when social comments are edited
      on the social questions detail page
    level: minor
    refno: 150501-000032
    sortPosition: Middle
  - account: dmadsen
    category: Bug Fix
    changelogID: 292
    date: 03/10/2015
    description: Translated labels not being used from input widgets to output widgets
      due to label name differences.
    level: minor
    refno: 150221-000000
    sortPosition: Middle
1.4.1:
  release: "15.2"
  entries:
  - account: pkolpin
    category: Bug Fix
    changelogID: 278
    date: 11/13/2014
    description: Corrected behavior when label_input is empty
    details:
    - If the label\_input attribute is empty, the required asterisk will also not
      display. The empty value will be output since some widgets, notably the ProductCategoryInput
      widget, expect the input label to be displayed and causes a JavaScript error
      when it cannot be found.  While providing a useful label\_input value is necessary
      for providing good accessibility to screen readers, rather than forcing the
      label\_input attribute to be required, this change instead causes the empty
      element to be output.  This small change in the view of the widget requires
      the minor bump of the widget.
    level: minor
    refno: 141010-000016
    sortPosition: Middle
1.3.1:
  release: "14.5"
  entries:
  - account: spage
    category: API Change
    changelogID: 228
    date: 01/28/2014
    description: Blob type fields where a 'max bytes' constraint is specified will
      now use the larger byte count for the input's 'maxlength' parameter.
    details:
    - Text fields that are stored in a blob type database field will now have the
      larger 'maxBytes' as the input field's  'maxlength' parameter.
    - For example, the 'Asset.Description' field used to limit text input to 1333
      characters, but now allows 4000.
    level: minor
    refno: 131204-000093
    sortPosition: Middle
1.2.1:
  release: "14.2"
  entries:
  - account: tlivengood
    category: New Feature
    changelogID: 194
    date: 11/01/2013
    description: Added support for `constraintChange` Dynamic Forms event
    details:
    - Restructured the label area of the widget to support dynamically changing the
      required-ness of an input field. This change can impact custom code which overrides
      the `preLabel` or `postLabel` RN Blocks. To consume this change, EJS extension
      will need to be used to override the blocks in their new locations in addition
      to their original locations.
    level: minor
    refno: 131021-000234
    sortPosition: Middle
1.1.1:
  release: "13.5"
  entries:
  - account: rlund
    category: API Change
    changelogID: 96
    date: 04/29/2013
    description: Existing email account dialog now uses messageDialog
    details:
    - The dialog that is shown when attempting to set an email field to an address
      that is already in use on another contact now uses messageDialog instead of
      a standard actionDialog. This makes the dialog easier to read with a screen
      reader.
    level: nano
    refno: 130321-000060
    sortPosition: Middle
  - account: tlivengood
    category: API Change
    changelogID: 77
    date: 04/29/2013
    description: Masks are now stripped on the server
    details:
    - Mask formatting characters were previously stripped in JavaScript before being
      sent to the API. The server expected the incoming value to be both a valid mask
      and properly stripped. The API now validates masks and performs the stripping.
      The logic to strip masks has been removed from JavaScript.
    - Any customizations which use a custom `Contact` or `Incident` model should add
      a call to `\RightNow\Utils\Connect::checkAndStripMask` on the field values before
      saving those values to Connect.
    - If a customization overwrote the `_stripMaskFromFieldValue` method in the Standard
      TextInput widget, that method is no longer called and the custom reformatting
      will need to be performed in either a custom AJAX endpoint or model call.
    level: minor
    refno: 130213-000130
    sortPosition: Middle
  - account: eturner
    category: API Change
    changelogID: 76
    date: 04/30/2013
    description: Gives URL or POST values precedence over end user entry of their
      email address
    details:
    - The email address on a feedback form's TextInput widget is populated with the
      end user's entry (Contact.Emails.PRIMARY.Address) only when no URL parameter
      or POST data is available.
    level: nano
    refno: 130110-000072
    sortPosition: Middle
  - account: spage
    category: API Change
    changelogID: 65
    date: 04/29/2013
    description: Saves masked value to data['maskedValue'] prior to stripping input
      mask characters
    details:
    - For fields with an input mask, the masked value is now saved prior to stripping
      the indicated punctuation. For example, if a phone number is submitted as (123)
      456-7890, the stripped value is 1234567890, and the original pre-stripped value,
      if required, can be obtained via `$this->data['maskedValue']`.
    level: nano
    refno: 130114-000103
    sortPosition: Middle
1.0.2:
  release: "13.2"
  entries:
  - account: ldavison
    category: Bug Fix
    changelogID: 40
    date: 04/29/2013
    description: Prevention of duplicate email address error
    details:
    - The duplicate email address error no longer appears when tabbing through the
      current email address field.
    level: nano
    refno: 130103-000073
    sortPosition: Middle
  - account: bbukowski
    category: Bug Fix
    changelogID: 21
    date: 04/29/2013
    description: Validation of email and URL system attribute formats
    details:
    - Text field system attributes that are designated with Email or URL field usage
      are now correctly validated when those fields are completed.
    level: nano
    refno: 121024-000076
    sortPosition: Middle
1.0.1:
  release: "12.11"
  entries:
  - date: 10/16/2012
    level: major
    description: Initial version
    category: API Change
    sortPosition: Middle