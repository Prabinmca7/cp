<?php

use RightNow\Connect\v1_4 as ConnectPHP,
    RightNow\Utils\Validation;

\RightNow\UnitTest\Helper::loadTestedFile(__FILE__);

class OkcsUtilTest extends CPTestCase {
    public $testingClass = '\RightNow\Utils\Okcs';
    function __construct() {
        $this->CI = get_instance();
    }

    function setUp(){
        $this->initialConfigValues['OKCS_ENABLED'] = \Rnow::getConfig(OKCS_ENABLED);
        \Rnow::updateConfig('OKCS_ENABLED', 1, true);
        $this->initialConfigValues['CP_ANSWERS_DETAIL_URL'] = \Rnow::getConfig(CP_ANSWERS_DETAIL_URL);
        \Rnow::updateConfig('CP_ANSWERS_DETAIL_URL', 'answers/answer_view', true);
        $this->initialConfigValues['OKCS_API_TIMEOUT'] = \Rnow::getConfig(OKCS_API_TIMEOUT);
        \Rnow::updateConfig('OKCS_API_TIMEOUT', 0, true);
        $this->initialConfigValues['OKCS_SRCH_API_URL'] = \Rnow::getConfig(OKCS_SRCH_API_URL);
        \Rnow::updateConfig('OKCS_SRCH_API_URL', 'http://'.\Rnow::getConfig(OE_WEB_SERVER).'/ci/unitTest/OkcsSrt/api/', true);
        $this->initialConfigValues['OKCS_IM_API_URL'] = \Rnow::getConfig(OKCS_IM_API_URL);
        \Rnow::updateConfig('OKCS_IM_API_URL', 'http://'.\Rnow::getConfig(OE_WEB_SERVER).'/ci/unitTest/OkcsKmApi/endpoint/', true);
        $this->initialConfigValues['DTF_SHORT_DATE'] = \Rnow::getConfig(DTF_SHORT_DATE);
        \Rnow::updateConfig('DTF_SHORT_DATE', \Rnow::getConfig(DTF_SHORT_DATE), true);
        $this->initialConfigValues['DTF_TIME'] = \Rnow::getConfig(DTF_TIME);
        \Rnow::updateConfig('DTF_TIME', \Rnow::getConfig(DTF_TIME), true);
        parent::setUp();
    }
    
    function tearDown(){
        foreach ($this->initialConfigValues as $config => $value) {
            \Rnow::updateConfig($config, $value, true);
        }
        parent::tearDown();
    }
    
    function testGetAnswerViewWithValidData() {
        $getAnswerView = $this->getMethod('getAnswerView');
        $contentXML = '<FAQ><TITLE><![CDATA[This is FAQ1]]></TITLE><DESCRIPTION><![CDATA[Sample document created for testing]]></DESCRIPTION></FAQ>';
        $channelSchemaAttributes = '[{"children":[],"schemaAttributeUserGroupList":[],"name":"Title","schemaAttrType":"TEXT_FIELD","referenceKey":"TITLE","xpath":"//FAQ/TITLE"},{"children":[],"name":"Description","schemaAttrType":"TEXT_AREA","referenceKey":"DESCRIPTION","xpath":"//FAQ/DESCRIPTION"}]';
        $results = $getAnswerView($contentXML, json_decode($channelSchemaAttributes), 'CHANNEL', '');
        $this->assertTrue(is_array($results));
        $this->assertSame(4, count($results));
        $firstChild = $results['FAQ/TITLE'];
        $this->assertSame('Title', $firstChild['name']);
        $this->assertSame('This is FAQ1', $firstChild['value']);
        $this->assertSame('FAQ/TITLE', $firstChild['xPath']);
        $this->assertSame(1, $firstChild['depth']);
        $secondChild = $results['FAQ/DESCRIPTION'];
        $this->assertSame('Description', $secondChild['name']);
        $this->assertSame('Sample document created for testing', $secondChild['value']);
        $this->assertSame('FAQ/DESCRIPTION', $secondChild['xPath']);
        $this->assertSame(1, $secondChild['depth']);
       
    }
    
    function testGetAnswerViewWithDuplicateAttributes() {
        $getAnswerView = $this->getMethod('getAnswerView');
        $contentXML = '<FAQ><TITLE><![CDATA[First Title Attribute]]></TITLE><TITLE><![CDATA[Second Title Attribute]]></TITLE></FAQ>';
        $channelSchemaAttributes = '[{"children":[],"schemaAttributeUserGroupList":[],"name":"Title","schemaAttrType":"TEXT_FIELD","referenceKey":"TITLE","xpath":"//FAQ/TITLE"},{"children":[],"name":"Title","schemaAttrType":"TEXT_FIELD","referenceKey":"TITLE","xpath":"//FAQ/TITLE"}]';
        $results = $getAnswerView($contentXML, json_decode($channelSchemaAttributes), 'CHANNEL', '');
        $this->assertTrue(is_array($results));
        $this->assertSame(4, count($results));
        $firstChild = $results['FAQ/TITLE'];
        $this->assertSame('Title', $firstChild['name']);
        $this->assertSame('First Title Attribute', $firstChild['value']);
        $this->assertSame('FAQ/TITLE', $firstChild['xPath']);
        $this->assertSame(1, $firstChild['depth']);
        $secondChild = $results['FAQ/TITLE-1'];
        $this->assertSame('Title', $secondChild['name']);
        $this->assertSame('Second Title Attribute', $secondChild['value']);
        $this->assertSame('FAQ/TITLE-1', $secondChild['xPath']);
        $this->assertSame(1, $secondChild['depth']);
    }
    
    function testGetValidContentAttributes() {
        $getValidContentAttributes = $this->getMethod('getValidContentAttributes');
        $getAnswerView = $this->getMethod('getAnswerView');
        $contentXML = '<FAQ><TITLE><![CDATA[First Title Attribute]]></TITLE><FILE><![CDATA[]]></FILE></FAQ>';
        $channelSchemaAttributes = '[{"children":[],"schemaAttributeUserGroupList":[],"name":"Title","schemaAttrType":"TEXT_FIELD","referenceKey":"TITLE","xpath":"//FAQ/TITLE"},{"children":[],"name":"FILE","schemaAttrType":"FILE","referenceKey":"FILE","xpath":"//FAQ/FILE"}]';
        $results = $getAnswerView($contentXML, json_decode($channelSchemaAttributes), 'CHANNEL', '');
        $validAttributes = $getValidContentAttributes($results);
        $this->assertTrue(is_array($validAttributes));
        $this->assertSame(3, count($validAttributes));
        $firstChild = $validAttributes['FAQ/TITLE'];
        $this->assertSame('Title', $firstChild['name']);
        $this->assertSame('First Title Attribute', $firstChild['value']);
        $this->assertSame('FAQ/TITLE', $firstChild['xPath']);
        $this->assertSame(1, $firstChild['depth']);
   }
    
    function testAttributesWithSameReferenceKey() {
        $getAnswerView = $this->getMethod('getAnswerView');
        $contentXML = '<FAQ><TITLE><![CDATA[First Title Attribute]]></TITLE><TITLE><![CDATA[Node Title Attribute]]></TITLE></FAQ>';
        $channelSchemaAttributes = '[{"children":[],"schemaAttributeUserGroupList":[],"name":"Title","schemaAttrType":"TEXT_FIELD","referenceKey":"TITLE","xpath":"//FAQ/TITLE"},{"children":[],"name":"Node Title","schemaAttrType":"TEXT_FIELD","referenceKey":"TITLE","xpath":"//FAQ/NODE/TITLE"}]';
        $results = $getAnswerView($contentXML, json_decode($channelSchemaAttributes), 'CHANNEL', '');
        $this->assertTrue(is_array($results));
        $this->assertSame(4, count($results));
        $firstChild = $results['FAQ/TITLE'];
        $secondChild = $results['FAQ/TITLE-1'];
        $this->assertSame($firstChild['name'], $secondChild['name']);
        $this->assertSame($firstChild['type'], $secondChild['type']);
        $this->assertSame('First Title Attribute', $firstChild['value']);
        $this->assertSame('Node Title Attribute', $secondChild['value']);
        $this->assertSame('FAQ/TITLE', $firstChild['xPath']);
        $this->assertSame(1, $firstChild['depth']);
    }
    
    function testGetFileDescription() {
        $getFileDescription = $this->getMethod('getFileDescription');
        $results = $getFileDescription();
        $this->assertNotNull($results);
        $this->assertIsA($results, 'Array');
    }

    function testGetRestQueryString() {
        $getRestQueryString = $this->getMethod('getRestQueryString');
        $queryParameters = array(
            'mode' => 'sortRecommendations',
            'limit' => 10,
            'offset' => 0,
            'userID' => '01203607b751e7d0150b87ec0c8007e7d',
            'orderBy' => 'dateAdded:DESC'
        );
        $queryString = $getRestQueryString($queryParameters);
        $this->assertSame('?q=requestedByUserId+eq+"01203607b751e7d0150b87ec0c8007e7d"&orderBy=dateAdded:DESC&offset=0&limit=10', $queryString);
    }

    function testConstructChannelCategoriesQuery() {
        $getRestQueryString = $this->getMethod('constructChannelCategoriesQuery');
        $queryParameters = array(
            'externalType' => 'Product',
            'limit' => 10,
            'offset' => 0,
            'orderBy' => 'dateAdded:DESC'
        );
        $queryString = $getRestQueryString($queryParameters);
        $this->assertSame('?q=externalType+eq+"Product"&orderBy=dateAdded:DESC&dateAdded=&offset=0&limit=10', $queryString);
    }
    
    function testFormatOkcsDateWithNull() {
        $getFormatOkcsDate = $this->getMethod('formatOkcsDate');
        $interfaceDate = $getFormatOkcsDate(null, 'DATE');
        $this->assertSame(0, count($interfaceDat));
        $this->assertNull($interfaceDate);
    }
    
    function testFormatOkcsDate() {
        $getFormatOkcsDate = $this->getMethod('formatOkcsDate');
        $interfaceDate = $getFormatOkcsDate("2015-12-30 03:12:08", 'DATE');
        $interfaceTime = $getFormatOkcsDate("2015-12-30 03:12:08", 'TIME');
        $interfaceDateTime = $getFormatOkcsDate("2015-12-30 03:12:08", 'DATETIME');
        $date = date_create("2015-12-30 03:12:08");
        $defaultDateTime = date_format($date,"Y/m/d H:i:s");
        $defaultDate = date_format($date,"Y/m/d");
        $defaultTime = date_format($date,"H:i:s");
        $this->assertNotEqual($defaultDateTime, $interfaceDateTime);
        $this->assertNotEqual($defaultTime, $interfaceTime);
        $this->assertNotEqual($defaultDate, $interfaceDate);
    }

    function testFormatOkcsDateWithStringInput() {
        $getFormatOkcsDate = $this->getMethod('formatOkcsDate');
        $dateInput = "Sample string for testing DATE";
        $timeInput = "Sample string for testing TIME";
        $dateTimeInput = "Sample string for testing DATETIME";

        $dateOutput = $getFormatOkcsDate($dateInput, 'DATE');
        $timeOutput = $getFormatOkcsDate($timeInput, 'TIME');
        $dateTimeOutput = $getFormatOkcsDate($dateTimeInput, 'DATETIME');

        $this->assertEqual($dateInput, $dateOutput);
        $this->assertEqual($timeInput, $timeOutput);
        $this->assertEqual($dateTimeInput, $dateTimeOutput);
    }

    function testFormatOkcsDateTimeFormat() {
        $getFormatOkcsDate = $this->getMethod('formatOkcsDate');
        $dateTime = $getFormatOkcsDate("2016-02-24 05:49:00", 'DATETIME');
        $time = $getFormatOkcsDate("2016-02-24 05:49:00", 'TIME');
        $this->assertNotNull($time);
        $this->assertSame("05:49 AM", trim($time));
        $this->assertSame("02/24/2016 05:49 AM", $dateTime);
        \Rnow::updateConfig('DTF_SHORT_DATE', "%d. %m. %Y", true);
        $dateTime = $getFormatOkcsDate("2016-02-24 05:49:00", 'DATE');
        $this->assertSame("24. 02. 2016", $dateTime);
        \Rnow::updateConfig('DTF_SHORT_DATE', "%Y-%m-%d", true);
        $dateTime = $getFormatOkcsDate("2015-05-11T05:36:08-0700", 'DATE');
        $this->assertSame("2015-05-11", $dateTime);
        \Rnow::updateConfig('DTF_SHORT_DATE', "%m/%d/%y", true);
        $dateTime = $getFormatOkcsDate("2015-05-11 07:00:00 Etc/GMT", 'DATE');
        $this->assertSame("05/11/15", $dateTime);
        \Rnow::updateConfig('DTF_SHORT_DATE', "%d/%m/%y", true);
        $dateTime = $getFormatOkcsDate("2015-02-11T05:36:08-0700", 'DATE');
        $this->assertSame("11/02/15", $dateTime);
        \Rnow::updateConfig('DTF_SHORT_DATE', "%d-%m-%y", true);
        $dateTime = $getFormatOkcsDate("2015-02-11T05:36:08-0700", 'DATE');
        $this->assertSame("11-02-15", $dateTime);        
    }

    function testArticleWithNodeAndList() {
        $contentXMLWithRepeatingNodeAndList = '<test_channel_><title><![CDATA[List channel test]]></title><node1><list><value><!--[CDATA[<div class="expand"--> <p class="para">For details about your specific devices and apps, check the compatibility report that is a part of the Get <span class="phrase">Windows 10</span> app. To do this, open the Get <span class="phrase">Windows 10</span> app, select the menu in the upper left corner of the app, and then select <span class="ui">Check your PC</span> (or <span class="ui">Your PC is good to go</span>) to see any known compatibility issues and recommended resolutions.</p> ]]></value><display><!--[CDATA[Will my apps and devices work with Windows 10?]]--></display><guid><!--[CDATA[0120961eceec0b01537e71f8c9007f49]]--></guid></list></node1><rich_text_area><!--[CDATA[<ol--> <li>testing 1</li> <li>testing 2</li> <li>testing 3</li> ]]></rich_text_area><list><value><!--[CDATA[3]]--></value><display><!--[CDATA[Item 3]]--></display><guid><!--[CDATA[01209607fb318da01539f241644007eeb]]--></guid></list><list><value><!--[CDATA[4]]--></value><display><!--[CDATA[Item 4]]--></display><guid><!--[CDATA[01209607fb318da01539f241644007ee9]]--></guid></list><node1><list><value><!--[CDATA[<strong-->This is Bold text  <br>  <em>This is italicized text</em>  <br>  <u>This is underlined text</u>  <br>  <s>This text has been struck through</s>  <br> Check out  <sup>superscripts</sup>  <br> Check out  <sub>subscripts</sub>  <br>  <br> Block Styles  <h2 style="font-style:italic;">I am Italic</h2>  <h3 style="color:#aaa;font-style:italic;">I am a subtitle</h3>  <div style="background:#eee;border:1px solid #ccc;padding:5px 10px;">   I am a special container  </div>  <br>  <br> Inline Styles  <br>  <span class="marker">I am a marker</span>  <br>  <big>I am Big</big>  <br>  <small>I am small</small>  <br>  <tt>Dont i look like a typewriter?</tt>  <br>  <code>I am a computer code</code>  <br>  <kbd>I am a keyboard phrase</kbd>  <br>  <samp>I am a sample text</samp>  <br>  <var>I am a variable</var>  <br>  <del>I am deleted text</del>  <br>  <ins>I am inserted text</ins>  <br>  <cite>I am Cited word</cite>  <br>  <q>I am an inline quotation</q>  <br>  <br> Checkout the different Paragraph formats  <p>Normal</p>  <h1>Heading 1</h1>  <h2>Heading 2</h2>  <h3>Heading 3</h3>  <h4>Heading 4</h4>  <h5>Heading 5</h5>  <h6>Heading 6</h6>  <pre> Formatted</pre>  <address>Address</address>  <div>   Normal div  </div>  <br> Variety fonts  <br>  <span style="font-family:arial,helvetica,sans-serif;">Arial</span>  <br>  <span style="font-family:courier new,courier,monospace;">Courier New</span>  <br>  <span style="font-family:comic sans ms,cursive;">Comic Sans MS</span>  <br>  <span style="font-family:georgia,serif;">Georgia</span>  <br>  <span style="font-family:lucida sans unicode,lucida grande,sans-serif;">Lucida Sans Unicode</span>  <br>  <span style="font-family:tahoma,geneva,sans-serif;">Tahoma</span>  <br>  <span style="font-family:times new roman,times,serif;">Times New Roman</span>  <br>  <span style="font-family:trebuchet ms,helvetica,sans-serif;">Trebuchet MS</span>  <br>  <span style="font-family:verdana,geneva,sans-serif;">Verdana</span>  <br>  <br>  <span style="color:#0000FF;">Colorful </span>  <span style="color:#EE82EE;">texts </span>-  <span style="color:#AFEEEE;">am </span>  <span style="color:#00FF00;">i</span>  <span style="color:#FFFF00;">a </span>  <span style="color:#FF8C00;">rainbow</span>  <span style="color:#FF0000;">huh?</span>  <br>  <span style="background-color:#00FF00;">i have</span>  <span style="background-color:#EE82EE;"> background color</span>  <span style="background-color:#FF0000;">too</span>  <br>  <br>  <br>  ]]></value><display><!--[CDATA[RTA - Font Styles]]--></display><guid><!--[CDATA[EC571EE6B2F34DE3848D3AD15FD2A163]]--></guid></list></node1><node1><list><value><!--[CDATA[<div style="width: 80%"-->   <h1 class="headline" style="box-sizing: inherit; font-family: wf_segoe-ui_light, wf_segoe-ui_semilight, wf_segoe-ui_normal, Arial, sans-serif; font-weight: inherit; line-height: 1.2; font-size: 62px; letter-spacing: -0.01em; margin-top: 1.13em; margin-bottom: 0px; color: rgb(0, 120, 215); font-style: normal; font-variant: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Windows comparisons</h1>   <h2 class="subtitle" style="box-sizing: inherit; font-family: wf_segoe-ui_light; font-weight: inherit; line-height: 1.25; font-size: 22px; color: rgb(0, 0, 0); font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Familiar and better than ever</h2>   <table border="1" cellpadding="0" cellspacing="0" style="float: right; width: 500px;">    <tbody>     <tr>      <td>Parameters</td>      <td>Windows 8.1</td>      <td>Windows 10</td>     </tr>     <tr>      <td>Start Menu</td>      <td>N</td>      <td>Y</td>     </tr>     <tr>      <td>Pinning Apps</td>      <td>Y</td>      <td>Y</td>     </tr>    </tbody>   </table>   <h2 class="sub-heading subheader" style="box-sizing: inherit; font-family: wf_segoe-ui_light, wf_segoe-ui_semilight, wf_segoe-ui_normal, Arial, sans-serif; font-weight: inherit; line-height: 1.2; font-size: 34px; width: 885px; margin-top: 0.25em; margin-bottom: 1.53em; color: rgb(0, 0, 0); font-style: normal; font-variant: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;">See whats new and improved with Windows 10 compared to previous versions of Windows.</h2>  ]]></value><display><!--[CDATA[Features of Windows 10]]--></display><guid><!--[CDATA[E77E2828401F4713A7D58D53873E3674]]--></guid></list></node1></test_channel_>';

        $channelWithRepeatingNodeAndList = '[{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007ee5","xpath":"//TEST_CHANNEL_/TITLE","name":"Title","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007ee5","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:44:47-0600","dateModified":"2016-03-22T23:44:47-0600","enableFullTextSearch":true,"includeInMasterIdentifier":true,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"TEXT_FIELD","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":1,"referenceKey":"TITLE"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007ee3","xpath":"//TEST_CHANNEL_/LIST","name":"List","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007ee3","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:45:07-0600","dateModified":"2016-03-22T23:45:07-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"LIST","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":2,"referenceKey":"LIST"},{"children":[{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007ede","xpath":"//TEST_CHANNEL_/NODE1/LIST","name":"List","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007ede","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:46:06-0600","dateModified":"2016-03-22T23:48:23-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"LIST","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":1,"referenceKey":"LIST"}],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007ee1","xpath":"//TEST_CHANNEL_/NODE1","name":"Node1","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007ee1","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:45:15-0600","dateModified":"2016-03-22T23:45:15-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":true,"allowMultipleNodes":true,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":3,"referenceKey":"NODE1"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007edd","xpath":"//TEST_CHANNEL_/RICH_TEXT_AREA","name":"Rich Text Area","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007edd","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:46:39-0600","dateModified":"2016-03-22T23:46:39-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"WYSIWYG_EDIT","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":4,"referenceKey":"RICH_TEXT_AREA","textHeight":"200","wysiwygType":"FULL"},{"children":[{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007eba","xpath":"//TEST_CHANNEL_/LIST123/LIST5","name":"List 5","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007eba","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:51:41-0600","dateModified":"2016-03-22T23:51:41-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"LIST","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":1,"referenceKey":"LIST5"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007eb8","xpath":"//TEST_CHANNEL_/LIST123/LIST_6","name":"List 6","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007eb8","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:52:01-0600","dateModified":"2016-03-22T23:52:01-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"LIST","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":2,"referenceKey":"LIST_6"}],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007ebb","xpath":"//TEST_CHANNEL_/LIST123","name":"Node3","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007ebb","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:50:49-0600","dateModified":"2016-03-22T23:50:49-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":true,"allowMultipleNodes":true,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":5,"referenceKey":"LIST123"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"01209607fb318da01539f241644007e8b","xpath":"//TEST_CHANNEL_/DATE_TIME","name":"Date Time","links":[{"rel":"canonical","href":"https://day04-16500-sql-171h-irs.dv.lan:443/km/api/v1/contentTypes/01209607fb318da01539f241644007f0e/contentSchema/01209607fb318da01539f241644007e8b","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-22T23:56:09-0600","dateModified":"2016-03-22T23:56:09-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"DATETIME","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":6,"referenceKey":"DATE_TIME"}]';

        $getAnswerView = $this->getMethod('getAnswerView');
        $results = $getAnswerView($contentXMLWithRepeatingNodeAndList, json_decode($channelWithRepeatingNodeAndList), 'CHANNEL', '');
        $this->assertTrue(is_array($results));
        $this->assertSame(5, count($results));
        $this->assertSame($results['TEST_CHANNEL_/TITLE']['type'], 'DISPLAY');
        $this->assertSame($results['TEST_CHANNEL_/TITLE']['value'], 'List channel test');
        $this->assertSame($results['TEST_CHANNEL_/TITLE']['xPath'], 'TEST_CHANNEL_/TITLE');
        $this->assertSame($results['TEST_CHANNEL_/NODE1']['type'], 'NODE');
        $this->assertSame($results['TEST_CHANNEL_/NODE1/LIST']['type'], 'NODE');
        $this->assertSame($results['TEST_CHANNEL_/NODE1/LIST']['name'], 'List');
    }

    function testAnswerDetailWithRepeatingNodeAndListXML() {
        $contentXMLWithRepeatingNodeAndList = '<CC><TITLE><![CDATA[1]]></TITLE><DESCRIPTION><![CDATA[1]]></DESCRIPTION><NODE1><TF><![CDATA[1]]></TF><TESTCHECKBOX><![CDATA[Y]]></TESTCHECKBOX><DATE><![CDATA[2016-03-01 07:00:00 Etc/GMT]]></DATE><DTTM><![CDATA[2016-03-01 08:00:00 Etc/GMT]]></DTTM><TIME><![CDATA[1970-01-01 08:00:00 Etc/GMT]]></TIME><RTA><![CDATA[1]]></RTA><SUBNODE><SUB_TITLE><![CDATA[11]]></SUB_TITLE><SUBDESC><![CDATA[11]]></SUBDESC><SUB_CHECKBOX><![CDATA[Y]]></SUB_CHECKBOX><SUB_DATE><![CDATA[2016-03-01 07:00:00 Etc/GMT]]></SUB_DATE><SUB_DTTM><![CDATA[2016-03-01 18:00:00 Etc/GMT]]></SUB_DTTM><SS_NODE><SS_TITLE><![CDATA[111]]></SS_TITLE><SS><![CDATA[Y]]></SS><SS_DATE><![CDATA[2016-03-11 07:00:00 Etc/GMT]]></SS_DATE><SS_DTTM><![CDATA[2016-03-11 18:00:00 Etc/GMT]]></SS_DTTM><SS_TIME><![CDATA[1970-01-01 18:00:00 Etc/GMT]]></SS_TIME><SS_LIST><VALUE><![CDATA[1]]></VALUE><DISPLAY><![CDATA[Item-1]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6b]]></GUID></SS_LIST><SS_LIST_DROP_DOWN><VALUE><![CDATA[1]]></VALUE><DISPLAY><![CDATA[Item-1]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6b]]></GUID></SS_LIST_DROP_DOWN><SS_LIST_DROP_DOWN_MULTISELECT><VALUE><![CDATA[Linux]]></VALUE><DISPLAY><![CDATA[Linux]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007eda]]></GUID></SS_LIST_DROP_DOWN_MULTISELECT><SS_LIST_RADIO><VALUE><![CDATA[Linux]]></VALUE><DISPLAY><![CDATA[Linux]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007eda]]></GUID></SS_LIST_RADIO><SS_COUNTER><![CDATA[2]]></SS_COUNTER></SS_NODE><SUB_LIST><VALUE><![CDATA[1]]></VALUE><DISPLAY><![CDATA[Item-1]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6b]]></GUID></SUB_LIST><SUB_LIST_DROP_DOWN><VALUE><![CDATA[Linux]]></VALUE><DISPLAY><![CDATA[Linux]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007eda]]></GUID></SUB_LIST_DROP_DOWN><SUB_LIST_MULTISELECT><VALUE><![CDATA[Linux]]></VALUE><DISPLAY><![CDATA[Linux]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007eda]]></GUID></SUB_LIST_MULTISELECT><SUB_LIST_RADIO><VALUE><![CDATA[Linux]]></VALUE><DISPLAY><![CDATA[Linux]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007eda]]></GUID></SUB_LIST_RADIO></SUBNODE><LIST1><VALUE><![CDATA[1]]></VALUE><DISPLAY><![CDATA[Item-1]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6b]]></GUID></LIST1><LIST2><VALUE><![CDATA[Linux]]></VALUE><DISPLAY><![CDATA[Linux]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007eda]]></GUID></LIST2><LIST3><VALUE><![CDATA[1]]></VALUE><DISPLAY><![CDATA[Item-1]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6b]]></GUID></LIST3><LIST4><VALUE><![CDATA[1]]></VALUE><DISPLAY><![CDATA[Item-1]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6b]]></GUID></LIST4><COUNTER><![CDATA[3]]></COUNTER></NODE1><NODE1><TF><![CDATA[2]]></TF><TESTCHECKBOX><![CDATA[Y]]></TESTCHECKBOX><DATE><![CDATA[2016-03-02 07:00:00 Etc/GMT]]></DATE><DTTM><![CDATA[2016-03-02 09:00:00 Etc/GMT]]></DTTM><TIME><![CDATA[1970-01-01 09:00:00 Etc/GMT]]></TIME><RTA><![CDATA[2]]></RTA><SUBNODE><SUB_TITLE><![CDATA[22]]></SUB_TITLE><SUBDESC><![CDATA[22]]></SUBDESC><SUB_DATE><![CDATA[2016-03-22 06:00:00 Etc/GMT]]></SUB_DATE><SUB_DTTM><![CDATA[2016-03-22 08:00:00 Etc/GMT]]></SUB_DTTM><SS_NODE><SS_TITLE><![CDATA[222]]></SS_TITLE><SS><![CDATA[Y]]></SS><SS_DATE><![CDATA[2016-03-02 07:00:00 Etc/GMT]]></SS_DATE><SS_DTTM><![CDATA[2016-03-22 08:00:00 Etc/GMT]]></SS_DTTM><SS_TIME><![CDATA[1970-01-01 09:00:00 Etc/GMT]]></SS_TIME><SS_LIST><VALUE><![CDATA[2]]></VALUE><DISPLAY><![CDATA[Item-2]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f70]]></GUID></SS_LIST><SS_LIST_DROP_DOWN><VALUE><![CDATA[2]]></VALUE><DISPLAY><![CDATA[Item-2]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f70]]></GUID></SS_LIST_DROP_DOWN><SS_LIST_DROP_DOWN_MULTISELECT><VALUE><![CDATA[Mac]]></VALUE><DISPLAY><![CDATA[Mac]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007ed9]]></GUID></SS_LIST_DROP_DOWN_MULTISELECT><SS_LIST_RADIO><VALUE><![CDATA[Mac]]></VALUE><DISPLAY><![CDATA[Mac]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007ed9]]></GUID></SS_LIST_RADIO></SS_NODE><SUB_LIST><VALUE><![CDATA[2]]></VALUE><DISPLAY><![CDATA[Item-2]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f70]]></GUID></SUB_LIST><SUB_LIST_DROP_DOWN><VALUE><![CDATA[Mac]]></VALUE><DISPLAY><![CDATA[Mac]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007ed9]]></GUID></SUB_LIST_DROP_DOWN><SUB_LIST_MULTISELECT><VALUE><![CDATA[Mac]]></VALUE><DISPLAY><![CDATA[Mac]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007ed9]]></GUID></SUB_LIST_MULTISELECT><SUB_LIST_RADIO><VALUE><![CDATA[Mac]]></VALUE><DISPLAY><![CDATA[Mac]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007ed9]]></GUID></SUB_LIST_RADIO></SUBNODE><LIST1><VALUE><![CDATA[2]]></VALUE><DISPLAY><![CDATA[Item-2]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f70]]></GUID></LIST1><LIST2><VALUE><![CDATA[Mac]]></VALUE><DISPLAY><![CDATA[Mac]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007ed9]]></GUID></LIST2><LIST3><VALUE><![CDATA[2]]></VALUE><DISPLAY><![CDATA[Item-2]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f70]]></GUID></LIST3><LIST4><VALUE><![CDATA[2]]></VALUE><DISPLAY><![CDATA[Item-2]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f70]]></GUID></LIST4></NODE1><NODE1><TF><![CDATA[3]]></TF><TESTCHECKBOX><![CDATA[Y]]></TESTCHECKBOX><DATE><![CDATA[2016-03-03 07:00:00 Etc/GMT]]></DATE><DTTM><![CDATA[2016-03-03 10:00:00 Etc/GMT]]></DTTM><TIME><![CDATA[1970-01-01 10:00:00 Etc/GMT]]></TIME><RTA><![CDATA[3]]></RTA><SUBNODE><SUB_TITLE><![CDATA[33]]></SUB_TITLE><SUBDESC><![CDATA[33]]></SUBDESC><SUB_CHECKBOX><![CDATA[Y]]></SUB_CHECKBOX><SUB_DATE><![CDATA[2016-03-03 07:00:00 Etc/GMT]]></SUB_DATE><SUB_DTTM><![CDATA[2016-03-03 10:00:00 Etc/GMT]]></SUB_DTTM><SS_NODE><SS_TITLE><![CDATA[333]]></SS_TITLE><SS><![CDATA[Y]]></SS><SS_DATE><![CDATA[2016-03-03 07:00:00 Etc/GMT]]></SS_DATE><SS_DTTM><![CDATA[2016-03-03 10:00:00 Etc/GMT]]></SS_DTTM><SS_TIME><![CDATA[1970-01-01 10:00:00 Etc/GMT]]></SS_TIME><SS_LIST_DROP_DOWN_MULTISELECT><VALUE><![CDATA[Windows]]></VALUE><DISPLAY><![CDATA[Windows]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007edd]]></GUID></SS_LIST_DROP_DOWN_MULTISELECT><SS_LIST_RADIO><VALUE><![CDATA[Windows]]></VALUE><DISPLAY><![CDATA[Windows]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007edd]]></GUID></SS_LIST_RADIO><SS_LIST><VALUE><![CDATA[3]]></VALUE><DISPLAY><![CDATA[Item-3]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6c]]></GUID></SS_LIST><SS_LIST_DROP_DOWN><VALUE><![CDATA[3]]></VALUE><DISPLAY><![CDATA[Item-3]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6c]]></GUID></SS_LIST_DROP_DOWN></SS_NODE><SUB_LIST_DROP_DOWN><VALUE><![CDATA[Windows]]></VALUE><DISPLAY><![CDATA[Windows]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007edd]]></GUID></SUB_LIST_DROP_DOWN><SUB_LIST_MULTISELECT><VALUE><![CDATA[Windows]]></VALUE><DISPLAY><![CDATA[Windows]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007edd]]></GUID></SUB_LIST_MULTISELECT><SUB_LIST_RADIO><VALUE><![CDATA[Windows]]></VALUE><DISPLAY><![CDATA[Windows]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007edd]]></GUID></SUB_LIST_RADIO><SUB_LIST><VALUE><![CDATA[3]]></VALUE><DISPLAY><![CDATA[Item-3]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6c]]></GUID></SUB_LIST></SUBNODE><LIST2><VALUE><![CDATA[Windows]]></VALUE><DISPLAY><![CDATA[Windows]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007edd]]></GUID></LIST2><LIST1><VALUE><![CDATA[3]]></VALUE><DISPLAY><![CDATA[Item-3]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6c]]></GUID></LIST1><LIST3><VALUE><![CDATA[3]]></VALUE><DISPLAY><![CDATA[Item-3]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6c]]></GUID></LIST3><LIST4><VALUE><![CDATA[3]]></VALUE><DISPLAY><![CDATA[Item-3]]></DISPLAY><GUID><![CDATA[0120865d42b14b015360d453a9007f6c]]></GUID></LIST4></NODE1></CC>';

        $channelWithRepeatingNodeAndList = '[{"children":[{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ee1","xpath":"//CC/NODE1/LIST1","name":"List1","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ee1","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:08:35-0600","dateModified":"2016-03-17T23:08:35-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"LIST","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":1,"referenceKey":"LIST1"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ed7","xpath":"//CC/NODE1/TF","name":"TF","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ed7","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:10:55-0600","dateModified":"2016-03-17T23:10:55-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"TF","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"TEXT_FIELD","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":2,"referenceKey":"TF"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ed5","xpath":"//CC/NODE1/TESTCHECKBOX","name":"TestCheckbox","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ed5","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:11:36-0600","dateModified":"2016-03-17T23:11:36-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"BOOLEAN","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":3,"referenceKey":"TESTCHECKBOX"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ed3","xpath":"//CC/NODE1/COUNTER","name":"Counter","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ed3","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":3,"dateAdded":"2016-03-17T23:11:48-0600","dateModified":"2016-03-17T23:11:48-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"COUNTER","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":4,"referenceKey":"COUNTER"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ed0","xpath":"//CC/NODE1/DATE","name":"Date","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ed0","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:12:11-0600","dateModified":"2016-03-17T23:12:11-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"DATE","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":5,"referenceKey":"DATE"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ecf","xpath":"//CC/NODE1/DTTM","name":"DTTM","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ecf","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:12:21-0600","dateModified":"2016-03-17T23:12:21-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"DATETIME","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":6,"referenceKey":"DTTM"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ecb","xpath":"//CC/NODE1/LIST2","name":"List2","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ecb","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:13:17-0600","dateModified":"2016-03-17T23:13:17-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"LIST","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":7,"referenceKey":"LIST2"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ec8","xpath":"//CC/NODE1/TIME","name":"Time","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ec8","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:13:44-0600","dateModified":"2016-03-17T23:13:44-0600","enableFullTextSearch":false,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"TIME","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":8,"referenceKey":"TIME"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ec7","xpath":"//CC/NODE1/RTA","name":"RTA","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ec7","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:14:13-0600","dateModified":"2016-03-17T23:14:13-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"WYSIWYG_EDIT","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":9,"referenceKey":"RTA","textHeight":"200","wysiwygType":"FULL"},{"children":[],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ec4","xpath":"//CC/NODE1/FILE","name":"File","links":[{"rel":"canonical","href":"https://appsidc165build110-irs.dv.lan:443/km/api/v1/contentTypes/0120865d42b14b015360d453a9007ef1/contentSchema/0120865d42b14b015360d453a9007ec4","mediaType":"application/json, application/xml","method":"GET"}],"requireWorkflowApproval":false,"allowPreselectedUserGroupChange":false,"counter":-1,"dateAdded":"2016-03-17T23:14:53-0600","dateModified":"2016-03-17T23:14:53-0600","enableFullTextSearch":true,"includeInMasterIdentifier":false,"isNode":false,"allowMultipleNodes":false,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"schemaAttrType":"FILE","secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":10,"referenceKey":"FILE"}],"schemaAttributeUserGroupList":[],"recordId":"0120865d42b14b015360d453a9007ee3","xpath":"//CC/NODE1","name":"Node1","dateAdded":"2016-03-17T23:08:06-0600","dateModified":"2016-03-17T23:08:06-0600","isNode":true,"allowMultipleNodes":true,"isRequired":false,"description":"","readOnly":false,"enableAttributeLevelSearch":false,"secureWithUserGroups":false,"securedFileResource":false,"userGroupSelectionRequired":false,"sortOrder":3,"referenceKey":"NODE1"}]';

        $getAnswerView = $this->getMethod('getAnswerView');
        $results = $getAnswerView($contentXMLWithRepeatingNodeAndList, json_decode($channelWithRepeatingNodeAndList), 'CHANNEL', '');

        $this->assertTrue(is_array($results));
        $this->assertSame(30, count($results));

        //assert repeating nodes.
        $this->assertSame($results['CC/NODE1']['type'], 'NODE');
        $this->assertSame($results['CC/NODE1-1']['type'], 'NODE');
        $this->assertSame($results['CC/NODE1-2']['type'], 'NODE');

        //assert node attributes
        $this->assertSame($results['CC/NODE1/TF']['type'], 'DISPLAY');
        $this->assertSame($results['CC/NODE1/TESTCHECKBOX']['value'], 'Y');
        $this->assertSame($results['CC/NODE1/RTA']['value'], '1');

        //assert lists inside nodes
        $this->assertSame($results['CC/NODE1/LIST1']['value'], 'Item-1');
        $this->assertSame($results['CC/NODE1/LIST2']['value'], 'Linux');
        $this->assertSame($results['CC/NODE1/LIST1-1']['value'], 'Item-2');
        $this->assertSame($results['CC/NODE1/LIST2-1']['value'], 'Mac');
        $this->assertSame($results['CC/NODE1/LIST1-2']['value'], 'Item-3');
        $this->assertSame($results['CC/NODE1/LIST2-2']['value'], 'Windows');
    }

    function testProcessXMLContentWithoutAnswerTag() {
        $processXMLContent = $this->getMethod('processXMLContent');
        $contentXML = '<FAQ><TITLE><![CDATA[test]]></TITLE><DESCRIPTION><![CDATA[test]]></DESCRIPTION><RTA><![CDATA[<h2 style="font-size: 16pt;">&nbsp;</h2> <p style="line-height: 20.8px;">Mail to test:&nbsp;<a href="mailto:jdoe@rightnow.com">Email to John Doe</a></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.goognjkfhdkjle.com" target="_new">Gnfdjfiunioogle</a>&nbsp;(opens in new window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="1" contents="Answer ID 1" target="_new" title="Answer ID 1"> &nbsp;(opens in new window). </rn:answer_xref></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.rightnow.com/" target="_self">RightNow</a>&nbsp;(opens in&nbsp;same window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="2" contents="Answer ID 2" target="_self" title="Answer ID 2"> &nbsp;(opens in&nbsp;same window). </rn:answer_xref></p> <p style="line-height: 20.8px;">&nbsp;</p> <p style="line-height: 20.8px;">&nbsp;</p>]]></RTA></FAQ>';
        $processedContentXML = $processXMLContent($contentXML);
        $this->assertSame($contentXML, $processedContentXML);
    }

    function testProcessXMLContent() {
        $processXMLContent = $this->getMethod('processXMLContent');
        $contentXML = '<FAQ><TITLE><![CDATA[test]]></TITLE><DESCRIPTION><![CDATA[test]]></DESCRIPTION><RTA><![CDATA[<h2 style="font-size: 16pt;">&nbsp;</h2> <p style="line-height: 20.8px;">Mail to test:&nbsp;<ok:answer-link answer_id="5999" contents="Obtaining Voice Processor diagnostic log files" title="Click here for: Obtaining Voice Processor diagnostic log files"></ok:answer-link><a href="mailto:jdoe@rightnow.com">Email to John Doe</a></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.goognjkfhdkjle.com" target="_new">Gnfdjfiunioogle</a><ok:answer-link answer_id="599" contents="Obtaining Voice Processor diagnostic log files" title="Click here for: Obtaining Voice Processor diagnostic log files"></ok:answer-link>&nbsp;(opens in new window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="1" contents="Answer ID 1" target="_new" title="Answer ID 1"> &nbsp;(opens in new window). </rn:answer_xref></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.rightnow.com/" target="_self">RightNow</a>&nbsp;(opens in&nbsp;same window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="2" contents="Answer ID 2" target="_self" title="Answer ID 2"> &nbsp;(opens in&nbsp;same window). </rn:answer_xref></p> <p style="line-height: 20.8px;">&nbsp;</p> <p style="line-height: 20.8px;">&nbsp;</p>]]></RTA></FAQ>';
        $processedContentXML = $processXMLContent($contentXML);
        $referenceContentXML = '<FAQ><TITLE><![CDATA[test]]></TITLE><DESCRIPTION><![CDATA[test]]></DESCRIPTION><RTA><![CDATA[<h2 style="font-size: 16pt;">&nbsp;</h2> <p style="line-height: 20.8px;">Mail to test:&nbsp;<a href="/app/answers/answer_view/a_id/5999" title="Click here for: Obtaining Voice Processor diagnostic log files">Obtaining Voice Processor diagnostic log files</a><a href="mailto:jdoe@rightnow.com">Email to John Doe</a></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.goognjkfhdkjle.com" target="_new">Gnfdjfiunioogle</a><a href="/app/answers/answer_view/a_id/599" title="Click here for: Obtaining Voice Processor diagnostic log files">Obtaining Voice Processor diagnostic log files</a>&nbsp;(opens in new window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="1" contents="Answer ID 1" target="_new" title="Answer ID 1"> &nbsp;(opens in new window). </rn:answer_xref></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.rightnow.com/" target="_self">RightNow</a>&nbsp;(opens in&nbsp;same window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="2" contents="Answer ID 2" target="_self" title="Answer ID 2"> &nbsp;(opens in&nbsp;same window). </rn:answer_xref></p> <p style="line-height: 20.8px;">&nbsp;</p> <p style="line-height: 20.8px;">&nbsp;</p>]]></RTA></FAQ>';
        $this->assertSame($referenceContentXML, $processedContentXML);
        $contentDocIdXML = '<JAN><QUESTION><![CDATA[Test doc id links in content]]></QUESTION><ANSWER><![CDATA[This is test document for the 17.5 story&nbsp;Support new link to KA Document IDs in CP. IM answers will have doc-id links which will be parsed while processing answers. Answer ids for these doc-ids are fetched from API and answer link will be created. <br /> <br /> CP Story reference number is&nbsp;161129-000162. <br /> <br /> This behavior is similar to the answer-link which are already present before. <br /> &nbsp; Click this link <ok:doc-link doc_id="JA1" title="mouseover title 1" contents="Answer title 1"> Answer title 1 </ok:doc-link> to open doc id JA1. Click <ok:doc-link doc_id="JA4" title="Title JA4" contents="JA4"> JA4 </ok:doc-link> to test JA4. Click <ok:doc-link title="title 9" doc_id="JA9" contents="Title 9"> Answer title 9 </ok:doc-link> <ok:doc-link title="mouseover title 2" contents="Answer title 2" doc_id="JA2"> Answer title 2 </ok:doc-link>. <ok:doc-link doc_id="FA4" title="Title FA4" contents="This article"> FA4 </ok:doc-link> is not there in IM. <ok:doc-link title="Title FA4" contents="This doc link"> FA10 </ok:doc-link> does not have doc_id. <ok:doc-link doc_id="FA4"> FA4 </ok:doc-link> has no title and content. <ok:doc-link doc_id="FA4" title="Title FA4" contents="This article"></ok:doc-link> has no value inside the tag]]></ANSWER></JAN>';
        $processedContentDocIdXML = $processXMLContent($contentDocIdXML);
        $referenceContentDocIdXML = '<JAN><QUESTION><![CDATA[Test doc id links in content]]></QUESTION><ANSWER><![CDATA[This is test document for the 17.5 story&nbsp;Support new link to KA Document IDs in CP. IM answers will have doc-id links which will be parsed while processing answers. Answer ids for these doc-ids are fetched from API and answer link will be created. <br /> <br /> CP Story reference number is&nbsp;161129-000162. <br /> <br /> This behavior is similar to the answer-link which are already present before. <br /> &nbsp; Click this link <a href="/app/answers/answer_view/a_id/0" title="mouseover title 1">Answer title 1</a> to open doc id JA1. Click <a href="/app/answers/answer_view/a_id/0" title="Title JA4">JA4</a> to test JA4. Click <a href="/app/answers/answer_view/a_id/0" title="title 9">Title 9</a> <a href="/app/answers/answer_view/a_id/0" title="mouseover title 2">Answer title 2</a>. <a href="/app/answers/answer_view/a_id/0" title="Title FA4">This article</a> is not there in IM. <a href="/app/answers/answer_view/a_id/0" title="Title FA4">This doc link</a> does not have doc_id. <a href="/app/answers/answer_view/a_id/0" title="">click here</a> has no title and content. <a href="/app/answers/answer_view/a_id/0" title="Title FA4">This article</a> has no value inside the tag]]></ANSWER></JAN>';
        $this->assertSame($referenceContentDocIdXML, $processedContentDocIdXML);
    }

    function testProcessXMLContentforHtmlTags() {
        $processXMLContent = $this->getMethod('processXMLContent');

        //Test html tags for answer link
        $contentXML = '<FAQ><TITLE><![CDATA[test]]></TITLE><DESCRIPTION><![CDATA[test]]></DESCRIPTION><RTA><![CDATA[<h2 style="font-size: 16pt;">&nbsp;</h2> <p style="line-height: 20.8px;">Mail to test:&nbsp;<ok:answer-link answer_id="5999" contents="&lt;i&gt;Obtaining Voice Processor diagnostic log files&lt;/i&gt;" title="Click here for: Obtaining Voice Processor diagnostic log files"></ok:answer-link><a href="mailto:jdoe@rightnow.com">Email to John Doe</a></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.goognjkfhdkjle.com" target="_new">Gnfdjfiunioogle</a><ok:answer-link answer_id="599" contents="Obtaining Voice Processor diagnostic log files" title="Click here for: Obtaining Voice Processor diagnostic log files"></ok:answer-link>&nbsp;(opens in new window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="1" contents="Answer ID 1" target="_new" title="Answer ID 1"> &nbsp;(opens in new window). </rn:answer_xref></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.rightnow.com/" target="_self">RightNow</a>&nbsp;(opens in&nbsp;same window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="2" contents="Answer ID 2" target="_self" title="Answer ID 2"> &nbsp;(opens in&nbsp;same window). </rn:answer_xref></p> <p style="line-height: 20.8px;">&nbsp;</p> <p style="line-height: 20.8px;">&nbsp;</p>]]></RTA></FAQ>';
        $processedContentXML = $processXMLContent($contentXML);
        $referenceContentXML = '<FAQ><TITLE><![CDATA[test]]></TITLE><DESCRIPTION><![CDATA[test]]></DESCRIPTION><RTA><![CDATA[<h2 style="font-size: 16pt;">&nbsp;</h2> <p style="line-height: 20.8px;">Mail to test:&nbsp;<a href="/app/answers/answer_view/a_id/5999" title="Click here for: Obtaining Voice Processor diagnostic log files"><i>Obtaining Voice Processor diagnostic log files</i></a><a href="mailto:jdoe@rightnow.com">Email to John Doe</a></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.goognjkfhdkjle.com" target="_new">Gnfdjfiunioogle</a><a href="/app/answers/answer_view/a_id/599" title="Click here for: Obtaining Voice Processor diagnostic log files">Obtaining Voice Processor diagnostic log files</a>&nbsp;(opens in new window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="1" contents="Answer ID 1" target="_new" title="Answer ID 1"> &nbsp;(opens in new window). </rn:answer_xref></p> <p style="line-height: 20.8px;">Here is&nbsp;a link to&nbsp;<a href="http://www.rightnow.com/" target="_self">RightNow</a>&nbsp;(opens in&nbsp;same window).</p> <p style="line-height: 20.8px;">Here is a link to another answer:&nbsp;&nbsp; <rn:answer_xref answer_id="2" contents="Answer ID 2" target="_self" title="Answer ID 2"> &nbsp;(opens in&nbsp;same window). </rn:answer_xref></p> <p style="line-height: 20.8px;">&nbsp;</p> <p style="line-height: 20.8px;">&nbsp;</p>]]></RTA></FAQ>';
        $this->assertSame($referenceContentXML, $processedContentXML);

        //Test html tags for doc link
        $contentDocIdXML = '<JAN><QUESTION><![CDATA[Test doc id links in content]]></QUESTION><ANSWER><![CDATA[This is test document for the 17.5 story&nbsp;Support new link to KA Document IDs in CP. IM answers will have doc-id links which will be parsed while processing answers. Answer ids for these doc-ids are fetched from API and answer link will be created. <br /> <br /> CP Story reference number is&nbsp;161129-000162. <br /> <br /> This behavior is similar to the answer-link which are already present before. <br /> &nbsp; Click this link <ok:doc-link doc_id="JA1" title="mouseover title 1" contents="&lt;b&gt;Answer title 1&lt;/b&gt;"> Answer title 1 </ok:doc-link> to open doc id JA1. Click <ok:doc-link doc_id="JA4" title="Title JA4" contents="JA4"> JA4 </ok:doc-link> to test JA4. Click <ok:doc-link title="title 9" doc_id="JA9" contents="Title 9"> Answer title 9 </ok:doc-link> <ok:doc-link title="mouseover title 2" contents="Answer title 2" doc_id="JA2"> Answer title 2 </ok:doc-link>. <ok:doc-link doc_id="FA4" title="Title FA4" contents="This article"> FA4 </ok:doc-link> is not there in IM. <ok:doc-link title="Title FA4" contents="This doc link"> FA10 </ok:doc-link> does not have doc_id. <ok:doc-link doc_id="FA4"> FA4 </ok:doc-link> has no title and content. <ok:doc-link doc_id="FA4" title="Title FA4" contents="This article"></ok:doc-link> has no value inside the tag]]></ANSWER></JAN>';
        $processedContentDocIdXML = $processXMLContent($contentDocIdXML);
        $referenceContentDocIdXML = '<JAN><QUESTION><![CDATA[Test doc id links in content]]></QUESTION><ANSWER><![CDATA[This is test document for the 17.5 story&nbsp;Support new link to KA Document IDs in CP. IM answers will have doc-id links which will be parsed while processing answers. Answer ids for these doc-ids are fetched from API and answer link will be created. <br /> <br /> CP Story reference number is&nbsp;161129-000162. <br /> <br /> This behavior is similar to the answer-link which are already present before. <br /> &nbsp; Click this link <a href="/app/answers/answer_view/a_id/0" title="mouseover title 1"><b>Answer title 1</b></a> to open doc id JA1. Click <a href="/app/answers/answer_view/a_id/0" title="Title JA4">JA4</a> to test JA4. Click <a href="/app/answers/answer_view/a_id/0" title="title 9">Title 9</a> <a href="/app/answers/answer_view/a_id/0" title="mouseover title 2">Answer title 2</a>. <a href="/app/answers/answer_view/a_id/0" title="Title FA4">This article</a> is not there in IM. <a href="/app/answers/answer_view/a_id/0" title="Title FA4">This doc link</a> does not have doc_id. <a href="/app/answers/answer_view/a_id/0" title="">click here</a> has no title and content. <a href="/app/answers/answer_view/a_id/0" title="Title FA4">This article</a> has no value inside the tag]]></ANSWER></JAN>';
        $this->assertSame($referenceContentDocIdXML, $processedContentDocIdXML);
    }

    function testGetProductCategoryTitle() {
        $getProductCategoryTitle = $this->getMethod('getProductCategoryTitle');
        $productCategoryTitle = $getProductCategoryTitle('RN_CATEGORY_1');
        $this->assertSame('OPERATING_SYSTEM', $productCategoryTitle);

        $productCategoryTitle = $getProductCategoryTitle('RN_PRODUCT_1');
        $this->assertSame('Iphone', $productCategoryTitle);
    }
}
