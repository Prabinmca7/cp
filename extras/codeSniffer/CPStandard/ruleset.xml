<?xml version="1.0"?>
<ruleset name="CPStandard">
    <description>A collection of sniffs for RightNow Customer Portal. Combines the Generic, PEAR and Squiz standards while removing a number of tests from each.</description>

    <!-- There are quite a few files and directories that we don't want to scan for various reasons (test files, 3rd party code, optimized code, etc)-->
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/core/framework/Controllers/UnitTest/*</exclude-pattern>
    <exclude-pattern>*/versions/*</exclude-pattern>
    <exclude-pattern>*/ThirdParty/*</exclude-pattern>
    <exclude-pattern>*/production/*</exclude-pattern>
    <exclude-pattern>*/staging/*</exclude-pattern>
    <exclude-pattern>*/temp_backups/*</exclude-pattern>
    <exclude-pattern>*/CodeIgniter/*</exclude-pattern>
    <exclude-pattern>*/CodeIgniter3/*</exclude-pattern>
    <exclude-pattern>*/cp/customer/development/errors/error_exception.php</exclude-pattern>
    <exclude-pattern>*/simpletest1.1beta/*</exclude-pattern>
    <exclude-pattern>*/webfiles/generated/*</exclude-pattern>
    <exclude-pattern>*/webfiles/core/js/*</exclude-pattern>
    <exclude-pattern>*/webfiles/core/ejs/*</exclude-pattern>
    <exclude-pattern>*/docGeneration/*</exclude-pattern>
    <exclude-pattern>*/optimized/*</exclude-pattern>
    <exclude-pattern>*/webfiles/core/static/RightNow.Compatibility.MarketingFeedback.js</exclude-pattern>
    <exclude-pattern>optimized_includes.php</exclude-pattern>
    <exclude-pattern>ServerBase.php</exclude-pattern>
    <exclude-pattern>Server.php</exclude-pattern>
    <exclude-pattern>ParseProppatch.php</exclude-pattern>
    <exclude-pattern>ParsePropfind.php</exclude-pattern>
    <exclude-pattern>*/compatibility/Mappings/Functions.php</exclude-pattern>
    <exclude-pattern>*/compatibility/ActionCapture.php</exclude-pattern>
    <exclude-pattern>*/cp/webfiles/core/debug-js/TreeViewAriaPlugin.js</exclude-pattern>
    <exclude-pattern>*/cp/webfiles/core/debug-js/TreeViewAriaPlugin.min.js</exclude-pattern>
    <exclude-pattern>*/cp/extras/codeSniffer/*</exclude-pattern>
    <exclude-pattern>*/cp/extras/docGeneration/*</exclude-pattern>
    <exclude-pattern>*/cp/extras/testRunner/*</exclude-pattern>
    <exclude-pattern>*/cp/extras/utils/*</exclude-pattern>
    <exclude-pattern>*/cp/extras/pta/*</exclude-pattern>
    <exclude-pattern>*/cp/webfiles/assets/themes/**/site.css</exclude-pattern>

    <!-- Include the Generic standard, but remove specific rules we don't care about -->
    <rule ref="Generic">
        <exclude name="Generic.Files.LineLength.MaxExceeded"/>                                      <!-- We don't have rules about line length -->
        <exclude name="Generic.Files.LineLength.TooLong"/>                                          <!-- No really, we don't -->
        <exclude name="Generic.Files.EndFileNewline.NotFound"/>                                     <!-- We don't care if files do or don't have a newline at the end -->
        <exclude name="Generic.Files.EndFileNoNewline.Found"/>                                      <!-- We don't care if files do or don't have a newline at the end -->
        <exclude name="Generic.Files.LowercasedFilename.NotFound"/>                                 <!-- We use uppercase file names -->
        <exclude name="Generic.Files.InlineHTML.Found"/>                                            <!-- All of our view files are .php but have inline HTML -->
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.TabsUsed"/>                           <!-- We use spaces, not tabs -->
        <exclude name="Generic.Formatting.SpaceAfterCast.NoSpace"/>                                 <!-- Spaces after casts are optional e.g. (int) $value or (int)$value -->
        <exclude name="Generic.Formatting.NoSpaceAfterCast.SpaceFound"/>                            <!-- Spaces after casts are optional e.g. (int) $value or (int)$value -->
        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSame"/>                     <!-- If two variables are assigned on consecutive lines, the equal signs don't need to match up -->
        <exclude name="Generic.Formatting.MultipleStatementAlignment.Incorrect"/>                   <!-- Allow the []= syntax in our code -->
        <exclude name="Generic.Formatting.DisallowMultipleStatements.SameLine"/>                    <!-- Allow multiple PHP statements per line -->
        <exclude name="Generic.CodeAnalysis.EmptyStatement.NotAllowed"/>                            <!-- We allow empty catch statements, as long as they have a comma, which is included below -->
        <exclude name="Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed"/>               <!-- We allow calls to count/strlen within loops -->
        <exclude name="Generic.CodeAnalysis.EmptyStatement.NotAllowedWarning"/>                     <!-- We can have empty catch statements, as long as they contain a comment -->
        <exclude name="Generic.NamingConventions.CamelCapsFunctionName.ScopeNotCamelCaps"/>         <!-- We have our own camelCase sniff -->
        <exclude name="Generic.NamingConventions.CamelCapsFunctionName.NotCamelCaps"/>              <!-- We have our own camelCase sniff -->
        <exclude name="Generic.PHP.NoSilencedErrors.Discouraged"/>                                  <!-- We allow the use of @ to silence errors -->
        <exclude name="Generic.PHP.ClosingPHPTag.NotFound"/>                                        <!-- We don't require a PHP closing tag -->
        <exclude name="Generic.PHP.UpperCaseConstant.Found"/>                                       <!-- Things like true/false/null can be lower case -->
        <exclude name="Generic.PHP.DisallowShortOpenTag.EchoFound"/>                                <!-- Allow <?= syntax -->
        <exclude name="Generic.PHP.DisallowShortOpenTag.Found"/>                                    <!-- Allow <? and not <?php -->
        <exclude name="Generic.Strings.UnnecessaryStringConcat.Found"/>                             <!-- We're fairly lenient with string concats, even if they're not entirely necessary -->
        <exclude name="Generic.Commenting.Todo.TaskFound"/>                                         <!-- Don't throw errors for todo comments in code -->
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>           <!-- Braces don't need to be on a new line -->
        <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceAfterBracket"/>  <!-- We don't force a space after closing paren for function declarations -->
        <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine"/>     <!-- Braces can be on the same line -->
        <exclude name="Generic.ControlStructures.InlineControlStructure.Discouraged"/>              <!-- Braces around single line control structures are optional -->
    </rule>

    <!-- Include the PEAR standard, but remove specific rules we don't care about -->
    <rule ref="PEAR">
        <exclude name="PEAR.Commenting.ClassComment.Missing"/>                                      <!-- Not all classes must have a comment -->
        <exclude name="PEAR.Commenting.ClassComment.MissingTag"/>                                   <!-- Nor do they need all the @package, @author, etc tags -->
        <exclude name="PEAR.Commenting.ClassComment.SpacingBeforeTags"/>                            <!-- Squiz already has this rule -->
        <exclude name="PEAR.Commenting.FileComment"/>                                               <!-- Files don't need a top level comment -->
        <!-- CPStandard overrides Squiz's FunctionComment standard. So don't enforce PEAR's FunctionComment -->
        <exclude name="PEAR.Commenting.FunctionComment.ExtraParamComment"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingParamTag"/>
        <exclude name="PEAR.Commenting.FunctionComment.SpacingAfterParams"/>
        <exclude name="PEAR.Commenting.FunctionComment.SpacingBeforeParamType"/>
        <exclude name="PEAR.Commenting.FunctionComment.SpacingBeforeTags"/>
        <exclude name="PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned"/>
        <exclude name="PEAR.Commenting.FunctionComment.ParameterNamesNotAligned"/>
        <exclude name="PEAR.Commenting.FunctionComment.Missing"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingReturn"/>
        <exclude name="PEAR.Commenting.FunctionComment.WrongStyle"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="PEAR.Commenting.FunctionComment.SpacingAfterLongName"/>
        <exclude name="PEAR.Commenting.FunctionComment.ParamNameNoMatch"/>
        <exclude name="PEAR.Classes.ClassDeclaration.OpenBraceNewLine"/>                            <!-- Allow class open brace to be on same line as definition -->
        <exclude name="PEAR.ControlStructures.ControlSignature"/>                                   <!-- Don't require spaces after control structure keyword -->
        <exclude name="PEAR.ControlStructures.MultiLineCondition.NewlineBeforeOpenBrace"/>          <!-- Allow braces for control structures to be on a newline -->
        <exclude name="PEAR.ControlStructures.MultiLineCondition.StartWithBoolean"/>                <!-- Don't require multiline if statements to begin with the operator as we usually put it on the trailing line -->
        <exclude name="PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace"/>          <!-- Weird rule about multi-line if statements that I can't see any actual problems with -->
        <exclude name="PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace"/>            <!-- Ditto from above -->
        <exclude name="PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine"/>             <!-- We end our multiline if statement parens on the last condition line -->
        <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnSameLine"/>                        <!-- Allow function open brace to be on same line as definition -->
        <exclude name="PEAR.Functions.FunctionDeclaration.SpaceAfterFunction"/>                     <!-- Don't require a space after function keyword. This doesn't handle anonymous functions at all -->
        <exclude name="PEAR.Functions.FunctionDeclaration.SpaceAfterBracket"/>                      <!-- Don't require a space after anonymous function close paren -->
        <exclude name="PEAR.Functions.FunctionDeclaration.SpaceAfterUse"/>                          <!-- Don't require a space after the use keyword -->
        <exclude name="PEAR.Functions.FunctionDeclaration.SpaceBeforeBrace"/>                       <!-- Don't require a space after a function opening brace -->
        <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnNewLine"/>                         <!-- Opening brace of function doesn't have to be on the same line -->
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>                     <!-- Allow multiple statement closing parens to be on the same line -->
        <exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments"/>                    <!-- Doesn't handle anonymous functions at all. We don't use multi-line functions anyway -->
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>              <!-- Doesn't handle anonymous functions at all -->
        <exclude name="PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>              <!-- Private methods don't need to start with underscores -->
        <exclude name="PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>              <!-- Private properties don't need to start with underscores -->
        <exclude name="PEAR.NamingConventions.ValidFunctionName.PublicUnderscore"/>                 <!-- Squiz already has this rule -->
        <exclude name="PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps"/>                <!-- Squiz already has this rule -->
        <exclude name="PEAR.NamingConventions.ValidFunctionName.NotCamelCaps"/>                     <!-- Squiz already has this rule-->
        <exclude name="PEAR.WhiteSpace.ScopeIndent.Incorrect"/>                                     <!-- This rule expects switches within a case to not be indented -->
        <exclude name="PEAR.WhiteSpace.ScopeClosingBrace.Line"/>                                    <!-- While we usually want a close brace to be on it's own line, this prevents inline functions and empty methods -->
        <exclude name="PEAR.WhiteSpace.ScopeClosingBrace.Indent"/>                                  <!-- Squiz already has this rule -->
        <exclude name="PEAR.Files.IncludingFile.UseIncludeOnce"/>                                   <!-- Don't force conditionally included files to use include_once instead of require_once -->
        <exclude name="PEAR.Formatting.MultiLineAssignment.EqualSignLine"/>                         <!-- Allow multi line assignments with equal sign on first line -->
    </rule>

    <!-- Include the Squiz standard, but remove specific rules we don't care about -->
    <rule ref="Squiz">
        <exclude name="Squiz.Commenting.ClosingDeclarationComment.Missing"/>                        <!-- Don't require a //end class comment -->
        <exclude name="Squiz.Commenting.FileComment"/>                                              <!-- Files don't need a top level comment -->
        <exclude name="Squiz.Commenting.ClassComment.Missing"/>                                     <!-- We don't require class level comments -->
        <exclude name="Squiz.Commenting.ClassComment.ShortFullStop"/>                               <!-- Don't require class comment to end in a period -->
        <exclude name="Squiz.Commenting.ClassComment.ShortSingleLine"/>                             <!-- The first comment in a doc block doesn't have to be a single sentance -->
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed"/>                               <!-- We allow certain @ tags in our class comments -->
        <exclude name="Squiz.Commenting.ClassComment.LongNotCapital"/>                              <!-- We have a few places where our long description is a code sample -->
        <!--
            CPStandard overrides Squiz's FunctionComment standard. So don't doubly-enforce FunctionComment.
            To view/modify what's enforced, check the CP.Commenting rules below.
        -->
        <exclude name="Squiz.Commenting.FunctionComment.Missing"/>
        <exclude name="Squiz.Commenting.FunctionComment.WrongStyle"/>
        <exclude name="Squiz.Commenting.FunctionComment.WrongEnd"/>
        <exclude name="Squiz.Commenting.FunctionComment.FailedParse"/>
        <exclude name="Squiz.Commenting.FunctionComment.Empty"/>
        <exclude name="Squiz.Commenting.FunctionComment.ContentAfterOpen"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingShort"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingBeforeShort"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingBetween"/>
        <exclude name="Squiz.Commenting.FunctionComment.LongNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingBeforeTags"/>
        <exclude name="Squiz.Commenting.FunctionComment.ShortSingleLine"/>
        <exclude name="Squiz.Commenting.FunctionComment.ShortNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.ShortFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.DuplicateReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.ReturnOrder"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingReturnType"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturnVoid"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidNoReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.ReturnIndent"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.ReturnNotRequired"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidThrows"/>
        <exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsOrder"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParams"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingBeforeParams"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingBeforeParamType"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParameterNamesNotAligned"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned"/>
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
        <exclude name="Squiz.Commenting.FunctionComment.TypeHintMissing"/>
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectTypeHint"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidTypeHint"/>
        <exclude name="Squiz.Commenting.FunctionComment.ExtraParamComment"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamName"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamType"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterLongType"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterLongName"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
        <exclude name="Squiz.Commenting.FunctionComment.SeeIndent"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturnNotVoid"/>
        <exclude name="Squiz.Commenting.FunctionCommentThrowTag.WrongNumber"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamNameNoMatch"/>
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>                             <!-- Inline comments don't need to end in a period -->
        <exclude name="Squiz.Commenting.InlineComment.NotCapital"/>                                 <!-- Inline comments don't need to start with a capital letter -->
        <exclude name="Squiz.Commenting.InlineComment.NoSpaceBefore"/>                              <!-- Don't require a space after an inline comment -->
        <exclude name="Squiz.Commenting.InlineComment.SpacingAfter"/>                               <!-- We allow blank lines after our inline comments -->
        <exclude name="Squiz.Commenting.LongConditionClosingComment.Missing"/>                      <!-- Don't require 'end if' comment for long control structures -->
        <exclude name="Squiz.Commenting.VariableComment.Missing"/>                                  <!-- Don't require class properties to be commented -->
        <exclude name="Squiz.Commenting.VariableComment.ShortFullStop"/>                            <!-- Comments above variables don't have to end in periods -->
        <exclude name="Squiz.Commenting.VariableComment.MissingVar"/>                               <!-- Nor do they have to have an @var tag -->
        <exclude name="Squiz.Commenting.VariableComment.SpacingBeforeTags"/>                        <!-- Don't require a space after variable description and @ tags -->
        <exclude name="Squiz.Commenting.VariableComment.ShortSingleLine"/>                          <!-- We let our variable comments expand to two lines -->
        <exclude name="Squiz.Commenting.PostStatementComment.Found"/>                               <!-- Allow comments after statements -->
        <exclude name="Squiz.Commenting.DocCommentAlignment.SpaceBeforeAsterisk"/>                  <!-- Ignore spacing for comment asterisks -->
        <exclude name="Squiz.Commenting.BlockComment.SingleLine"/>                                  <!-- Allow single line block comments -->
        <exclude name="Squiz.Commenting.BlockComment.NoEmptyLineAfter"/>                            <!-- Don't require a blank line after a block comment -->
        <exclude name="Squiz.Commenting.BlockComment.LineIndent"/>                                  <!-- Ignore indenation rules for block comments -->
        <exclude name="Squiz.Commenting.BlockComment.FirstLineIndent"/>                             <!-- More block comment indentaiton checking that we don't need -->
        <exclude name="Squiz.Commenting.BlockComment.NoCapital"/>                                   <!-- Don't require block comments to start with a capital. Some of our start with a number -->
        <exclude name="Squiz.Commenting.BlockComment.LastLineIndent"/>                              <!-- Don't require last line of block comment to be indented 8 spaces since we usually use 9 -->
        <exclude name="Squiz.Formatting.OperatorBracket.MissingBrackets"/>                          <!-- Don't require arithmetic operations to be bracketed -->
        <exclude name="Squiz.NamingConventions.ConstantCase.Found"/>                                <!-- Things like true/false/null can be upper or lower case -->
        <exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>             <!-- Private methods don't need to start with underscores -->
        <exclude name="Squiz.NamingConventions.ValidVariableName.NotCamelCaps"/>                    <!-- We have our own camelCase sniff -->
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>             <!-- Private variables don't need to have a leading underscore -->
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.Before"/>                                   <!-- Don't require spacing before function definition -->
        <exclude name="Squiz.WhiteSpace.FunctionSpacing.After"/>                                    <!-- Don't require spacing after function definition -->
        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/>             <!-- Don't require a newline before closing function brace -->
        <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose"/>                 <!-- Don't require a newline after closing control structure brace -->
        <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace"/>            <!-- We allow spaces after before close parens in control structures -->
        <exclude name="Squiz.WhiteSpace.LanguageConstructSpacing.Incorrect"/>                       <!-- Don't require space after language construct -->
        <exclude name="Squiz.WhiteSpace.MemberVarSpacing.After"/>                                   <!-- Don't require empty line after each class property -->
        <exclude name="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore"/>                          <!-- Allow closing braces to be inline to allow inline function declarations -->
        <exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine"/>                            <!-- Allow whitespace at the end of lines. Folks should having this trimmed automatically -->
        <exclude name="Squiz.WhiteSpace.OperatorSpacing"/>                                          <!-- We copied this file and modified some rules, so no need to run them twice -->
        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBetween"/>                 <!-- Empty JS function brackets don't need to be right next to each other (e.g. { } is ok)-->
        <exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing"/>                                    <!-- Allow multiline method chaining -->
        <exclude name="Squiz.ControlStructures.ControlSignature"/>                                  <!-- Don't require spaces after control structure keyword -->
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow"/>         <!-- Allow spaces before => in array declarations -->
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine"/>                 <!-- Allow ternary checks to span multiple lines -->
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.MissingDefault"/>                  <!-- Don't require that all switch statements contain a default case -->
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.BreakIndent"/>                     <!-- Don't require break statement to be aligned with case statement -->
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak"/>               <!-- Don't require a newline after a break statement -->
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak"/>                  <!-- Don't require a break in the default of a case statement -->
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen"/>              <!-- Don't require a space between our shorthand (?:) ternary operators -->
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse"/>             <!-- Don't require a space between our shorthand (?:) ternary operators -->
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.NoBrackets"/>                    <!-- Don't require parens around ternary subjects -->
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen"/>             <!-- Don't enforce specific spacing rules for inline if statements -->
        <exclude name="Squiz.PHP.DisallowMultipleAssignments.Found"/>                               <!-- Allow variable assignments on more than just the first line of a method -->
        <exclude name="Squiz.PHP.DisallowComparisonAssignment.AssignedComparison"/>                 <!-- Allow comparison result to be assigned to a variable e.g. if($foo = ($bar === null)) -->
        <exclude name="Squiz.PHP.DisallowInlineIf.Found"/>                                          <!-- Allow ternary if conditions -->
        <exclude name="Squiz.PHP.ForbiddenFunctions.Found"/>                                        <!-- We have our own forbidden function list -->
        <exclude name="Squiz.PHP.DisallowSizeFunctionsInLoops.Found"/>                              <!-- Allow things like strlen/count within for/while loops -->
        <exclude name="Squiz.PHP.Heredoc.NotAllowed"/>                                              <!-- Allow heredocs -->
        <exclude name="Squiz.PHP.DisallowComparisonAssignment.AssignedBool"/>                       <!-- Allow boolean values to be assigned to variables in if statements -->
        <exclude name="Squiz.PHP.DisallowBooleanStatement.Found"/>                                  <!-- Allow boolean operations outside of if statements, such as within return values -->
        <exclude name="Squiz.Files.FileExtension.ClassFound"/>                                      <!-- Class files will end in .php, not .inc -->
        <exclude name="Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace"/>                     <!-- Don't require closing PHP tag after class -->
        <exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>                                 <!-- We have our own camelCase sniff -->
        <exclude name="Squiz.Classes.ClassDeclaration.OpenBraceNewLine"/>                           <!-- Class braces can be on the same line as the declaration -->
        <exclude name="Squiz.Classes.ClassDeclaration.MultipleClasses"/>                            <!-- This is already covered with a Generic rule which we have an exception list for below -->
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine"/>              <!-- Allow opening brace to be on same line as declaration -->
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault"/>      <!-- Allow space after method default value assignment -->
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals"/>      <!-- Allow spaces between name and equal sign for optional function arguments -->
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterFunction"/>           <!-- Don't require a space after function keyword. This doesn't handle anonymous functions at all -->
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterBracket"/>            <!-- Don't require a space after anonymous function close paren -->
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceBeforeBrace"/>             <!-- Don't require space before opening brace of anonymous function -->
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterUse"/>                <!-- Don't require space after use keyword -->
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine"/>              <!-- Allow parameters on methods which are split into multiple lines to include more than 1 param per line -->
        <exclude name="Squiz.Strings.ConcatenationSpacing.Missing"/>                                <!-- Allow spaces before/after string contact operator -->
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>                                <!-- Allow variable inlining within strings -->
        <exclude name="Squiz.Strings.DoubleQuoteUsage.NotRequired"/>                                <!-- We don't really care if double quotes are used even if they aren't needed -->
        <exclude name="Squiz.Objects.ObjectInstantiation.NotAssigned"/>                             <!-- Don't force new objects to always be assigned to a variable -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>                        <!-- Ignore brace alignment rules -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>                        <!-- Allow arrays with multiple entries to be defined on a single line -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>                               <!-- Ignore array key alignment rules -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline"/>                         <!-- The first item of a multiline array doesn't have to be on a newline -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"/>                           <!-- The closing paren also doesn't need to be on a newline -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>                             <!-- Multiline array lines don't have to be indented a specific way -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline"/>                         <!-- The first item of a multi-line array doesn't have to be on a new line -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast"/>                            <!-- We don't require commas after array declarations -->
        <exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed"/>                         <!-- We're ok with having a single value array be on multiple lines -->
        <exclude name="Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket"/>                       <!-- Allow spaces before bracket e.g. $foo []= -->
        <exclude name="Squiz.Scope.MethodScope.Missing"/>                                           <!-- Don't require all methods to declare a scope -->
        <exclude name="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue"/>                      <!-- Allow implicit true checks e.g. if($foo) -->
        <exclude name="Squiz.Operators.IncrementDecrementUsage.NoBrackets"/>                        <!-- Don't force increment/decrement operators to be bracketed during string concat -->
        <exclude name="Squiz.Operators.ComparisonOperatorUsage.NotAllowed"/>                        <!-- We get to use !== in our code -->
        <!-- CSS RULES -->
        <exclude name="Squiz.CSS.ColonSpacing.NoneAfter"/>                                          <!-- Don't require spaces after colons in CSS styles -->
        <exclude name="Squiz.CSS.ClassDefinitionOpeningBraceSpace.NoneBefore"/>                     <!-- Don't require spaces after opening brace -->
        <exclude name="Squiz.CSS.ClassDefinitionOpeningBraceSpace.AfterNesting"/>                   <!-- Don't require a blank line on nested rules -->
        <exclude name="Squiz.CSS.ClassDefinitionOpeningBraceSpace.After"/>                          <!-- Allow comments to be the first content of a CSS rule block -->
        <exclude name="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose"/>              <!-- Don't require blank lines after each rule -->
        <exclude name="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose"/>             <!-- Allow comments to be the last content of a CSS rule -->
        <exclude name="Squiz.CSS.Indentation.BlankLine"/>                                           <!-- Allow comments and black lines -->
        <exclude name="Squiz.CSS.DuplicateStyleDefinition.Found"/>                                  <!-- We have our own CSS duplicate rule sniff -->
        <exclude name="Squiz.CSS.ColourDefinition.NotUpper"/>                                       <!-- Colors can be in upper or lowercase -->
        <exclude name="Squiz.CSS.LowercaseStyleDefinition.FoundUpper"/>                             <!-- We don't really have any rules about using uppercase letters, especially for font names -->
        <exclude name="Squiz.CSS.NamedColours.Forbidden"/>                                          <!-- We don't require hex-only colors in our CSS -->
        <exclude name="Squiz.CSS.ShorthandSize.NotAllowed"/>                                        <!-- Allow shorthand size rules (e.g. 1px 0 1px) -->
        <exclude name="Squiz.CSS.ForbiddenStyles.FoundWithAlternative"/>                            <!-- While it'd be nice to get rid of them, it's not worth cleaning up all our vendor prefix rules -->
        <!-- JS RULES -->
        <exclude name="Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfterNested"/>             <!-- Allow opening function brace on newline in JS code -->
        <exclude name="Squiz.WhiteSpace.PropertyLabelSpacing.After"/>                               <!-- Allow literal JS objects to not have space after colon in key:value -->
        <exclude name="Squiz.WhiteSpace.PropertyLabelSpacing.Before"/>                              <!-- This is a good rule, but it's poorly implemented and can't handle ternary statements -->
        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.ContentBeforeClose"/>             <!-- Don't require inline functions to have their closing brace on it's own line -->
    </rule>

    <!-- Include the Zend standard, but remove specific rules we don't care about -->
    <rule ref="Zend">
        <exclude name="Zend.NamingConventions.ValidVariableName.NotCamelCaps"/>                     <!-- We have our own valid naming checks -->
        <exclude name="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>              <!-- Private variables don't need to begin with a leading underscore -->
    </rule>

<!-- Modifications - Change the default values of a few rules -->

    <!-- Be a little more lenient with what commented out code looks like -->
    <rule ref="Squiz.PHP.CommentedOutCode">
     <exclude-pattern>*/core/framework/Internal/Libraries/Deployment/Assets/AssetGroup.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResult.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResults.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/Widget/Helper.php</exclude-pattern>
        <properties>
            <property name="maxPercentage" value="70"/>
        </properties>
    </rule>

    <rule ref="PEAR.Commenting.InlineComment.WrongStyle">
     <exclude-pattern>*/core/framework/Internal/Libraries/Deployment/Assets/AssetGroup.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResult.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResults.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/Widget/Helper.php</exclude-pattern>
    </rule>

    <rule ref="Squiz.Commenting.InlineComment.WrongStyle">
     <exclude-pattern>*/core/framework/Internal/Libraries/Deployment/Assets/AssetGroup.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResult.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResults.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/Widget/Helper.php</exclude-pattern>
    </rule>

    <rule ref="PEAR.Commenting.ClassComment.WrongStyle">
     <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResult.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResults.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/Widget/Helper.php</exclude-pattern>
    </rule>

    <rule ref="Squiz.Commenting.ClassComment.WrongStyle">
     <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResult.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResults.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/Widget/Helper.php</exclude-pattern>
    </rule>
    
    <rule ref="Squiz.Commenting.VariableComment.WrongStyle">
     <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResult.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/SearchResults.php</exclude-pattern>
     <exclude-pattern>*/core/framework/Libraries/Widget/Helper.php</exclude-pattern>
    </rule>

    <!-- Bump up method complexity to 20 -->
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="40"/>
        </properties>
    </rule>

    <!-- Allow nesting levels up to 7 before warning -->
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="7"/>
        </properties>
    </rule>

<!--Exceptions -->

    <!-- Our deployer has a few methods that aren't camelCase -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName.NotCamelCaps">
        <exclude-pattern>*/core/framework/Internal/Libraries/Deployer.php</exclude-pattern>
    </rule>

    <!-- We alias a number of IAPI methods, which user underscores instead of camel case -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName.ScopeNotCamelCaps">
        <exclude-pattern>*/core/compatibility/Api.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Internal/Api.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Internal/Sql/Report.php</exclude-pattern>
    </rule>

    <!-- We generally want comments for every single function, but some of our internal type classes don't have them -->
    <rule ref="CPStandard.Commenting.FunctionComment.Missing">
        <exclude-pattern>*/core/framework/Controllers/Admin/*</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/*</exclude-pattern>
        <exclude-pattern>*/core/framework/init.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Views/Admin/*</exclude-pattern>
        <exclude-pattern>*/core/util/*</exclude-pattern>
        <exclude-pattern>*/controller.php</exclude-pattern>
    </rule>

    <!-- Don't enfore certain rules from CPStandard/Sniffs/Commenting/FunctionCommentSniff.php -->
    <rule ref="CPStandard.Commenting.FunctionComment.ShortFullStop">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ParamCommentFullStop">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ParameterNamesNotAligned">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ParameterCommentsNotAligned">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.SpacingAfterParams">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ThrowsNoFullStop">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ThrowsNotCapital">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.SpacingBeforeTags">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ShortSingleLine">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.SpacingBeforeParamType">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.InvalidReturnNotVoid">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.InvalidReturn">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.LongNotCapital">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.IncorrectParamVarName">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.SeeIndent">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.TypeHintMissing">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.ReturnIndent">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="CPStandard.Commenting.FunctionComment.MissingReturn">
        <exclude-pattern>*/core/framework/Controllers/*</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/*</exclude-pattern>
        <exclude-pattern>*/core/framework/init.php</exclude-pattern>
        <exclude-pattern>*/core/util/*</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/*</exclude-pattern>
        <exclude-pattern>*/customer/development/*</exclude-pattern>
    </rule>

    <!-- Only public methods in controllers can begin with underscores -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName.PublicUnderscore">
        <exclude-pattern>*/core/framework/Controllers/*</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Controllers/Documents.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Staging.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Version.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/search/MobileProductCategorySearchFilter/controller.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Internal/Sql/Report.php</exclude-pattern>
    </rule>

    <!-- Our JS code documentation is formatted properly for JSDOc, so ignore any conflicting warnings about it -->
    <rule ref="Squiz.Commenting.InlineComment.DocBlock">
        <exclude-pattern>*.js</exclude-pattern>
    </rule>

    <!-- This rule can't handle JS code very well -->
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace.ContentBefore">
        <exclude-pattern>*.js</exclude-pattern>
    </rule>


    <!-- We still use call-type pass by reference for hooks since customers likely aren't doing things correctly here -->
    <rule ref="Generic.Functions.CallTimePassByReference.NotAllowed">
        <exclude-pattern>*/core/framework/Libraries/Hooks.php</exclude-pattern>
    </rule>

    <!-- We don't like numbers in variable names, but we use them quite a bit here -->
    <rule ref="Zend.NamingConventions.ValidVariableName.ContainsNumbers">
        <exclude-pattern>*/core/framework/Hooks/Clickstream.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Internal/Api.php</exclude-pattern>
    </rule>

    <!-- Ignore indentation warnings for view files and the init file -->
    <rule ref="Generic.WhiteSpace.ScopeIndent.Incorrect">
        <exclude-pattern>*/core/framework/Views/Admin/*</exclude-pattern>
        <exclude-pattern>*/core/framework/Views/WidgetConverter/*</exclude-pattern>
        <exclude-pattern>*/init.php</exclude-pattern>
        <exclude-pattern>*/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Widget/Builder.php</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/development/views/pages/account/assets/detail.php</exclude-pattern>
        <exclude-pattern>*/development/views/pages/public_profile.php</exclude-pattern>
        <exclude-pattern>*/development/views/pages/public_profile_update.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/social/ask.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/social/ask.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/abuse/index.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/friend/results.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/*/cp/customer/development/views/pages/answer.php</exclude-pattern>
    </rule>

    <!-- Ignore blank line warning before/after control structures in views and JS files-->
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeOpen">
        <exclude-pattern>*/core/framework/Views/Admin/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/development/views/*</exclude-pattern>
        <exclude-pattern>*.js</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/abuse/index.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/friend/results.php</exclude-pattern>
    </rule>

    <!-- Ignore blank line warning before/after control structures in views and JS files-->
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterClose">
        <exclude-pattern>*/core/framework/Views/Admin/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/SocialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/development/views/*</exclude-pattern>
        <exclude-pattern>*.js</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/abuse/index.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/friend/results.php</exclude-pattern>
    </rule>

    <!-- Ignore scope closing indenting in views -->
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace.Indent">
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
    </rule>

    <!-- Ignore multi-line function call indenting in views -->
    <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
        <exclude-pattern>*/view.php</exclude-pattern>
    </rule>

    <!-- Ignore global function warnings for view files -->
    <rule ref="Squiz.Functions.GlobalFunction.Found">
        <exclude-pattern>*/core/framework/Views/Admin/*</exclude-pattern>
        <exclude-pattern>*/util/dynamicJavaScript.php</exclude-pattern>
        <exclude-pattern>*/customer/development/helpers/sample_helper.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/Bootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/BootstrapCI3.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrapCI3.php</exclude-pattern>
    </rule>


    <!-- Ignore duplicate class names for tarball file -->
    <rule ref="Generic.Classes.DuplicateClassName.Found">
        <exclude-pattern>*/util/versionsCron/VersionBootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrapCI3.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/Bootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/BootstrapCI3.php</exclude-pattern>
    </rule>


    <!-- Ignore elseif warnings for view files -->
    <rule ref="Squiz.ControlStructures.ElseIfDeclaration.NotAllowed">
        <exclude-pattern>*/core/framework/Views/Admin/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/*/cp/customer/development/views/admin/answer.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/*/cp/customer/development/views/admin/okcs/answer.php</exclude-pattern>
        <exclude-pattern>*/okcs_answer_full_preview.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/okcs/answer.php</exclude-pattern>
    </rule>


    <!-- Ignore PHP open on first line for view files -->
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag.Found">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/error_php.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/basic/error.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/error.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/account/reset_password.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/account/setup_password.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/account/reset_password.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/account/setup_password.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/error.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/utils/login_form.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/utils/login_form.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/public_profile.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/public_profile_update.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/social/ask.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/social/ask.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/b2b/assetsAndContracts/development/views/pages/account/assets/detail.php</exclude-pattern>
        <exclude-pattern>*/extras/samples/DynamicProductCategoryInput/1.0/dynamic_ask.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/*</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/15.5/cp/customer/development/views/pages/answer.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/15.8/cp/customer/development/views/pages/answer.php</exclude-pattern>
    </rule>

    <rule ref="Zend.Files.ClosingTag.NotAllowed">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
    </rule>

    <!-- Allow spaces after opening/closing PHP tag for embedded code and don't require semicolons either -->
    <rule ref="Squiz.PHP.EmbeddedPhp.SpacingAfterOpen">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/utils/login_form.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/utils/login_form.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/public_profile.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/public_profile_update.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/social/ask.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/social/ask.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/ma/friend/index.php</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/error.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/error.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/basic/error.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/b2b/assetsAndContracts/development/views/pages/account/assets/detail.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.EmbeddedPhp.NoSemicolon">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/utils/login_form.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/utils/login_form.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/public_profile.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/public_profile_update.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/mobile/social/ask.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/pages/social/ask.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/b2b/assetsAndContracts/development/views/pages/account/assets/detail.php</exclude-pattern>
        <exclude-pattern>*/core/compatibility/Views/*</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/15.5/cp/customer/development/views/pages/answer.php</exclude-pattern>
        <exclude-pattern>*/extras/reference/okcs/15.8/cp/customer/development/views/pages/answer.php</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.EmbeddedPhp.Indent">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.EmbeddedPhp.ContentAfterEnd">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.EmbeddedPhp.ContentAfterOpen">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.EmbeddedPhp.MultipleStatements">
        <exclude-pattern>*/core/framework/Views/*</exclude-pattern>
        <exclude-pattern>*/view.php</exclude-pattern>
        <exclude-pattern>*/socialView.php</exclude-pattern>
        <exclude-pattern>*/*.html.php</exclude-pattern>
        <exclude-pattern>*/customer/development/views/admin/*</exclude-pattern>
        <exclude-pattern>*/customer/development/errors/*</exclude-pattern>
    </rule>

    <!-- Allow multiple classes per file in a few locations -->
    <rule ref="Generic.Files.OneClassPerFile.MultipleFound">
        <exclude-pattern>*/core/framework/Controllers/Admin/WidgetConverter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/OpenLogin.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/*</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/AsyncBase.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/PhpFunctional.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/classes/Helper.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/classes/reporters/RegularReporter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/classes/reporters/TapReporter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Hooks/Clickstream.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Widget/Base.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Session.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/ResponseObject.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/GuidedAssistance.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Cache/PersistentReadThroughCache.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Asynchronous.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/SearchMappers/BaseMapper.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Widget/Builder.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ThemeParser.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Deployer.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Staging.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/TagDefinitions.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/SandboxedConfigs.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Resolvers.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Logging.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/HeaderBuilder/Development.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/HeaderBuilder/Reference.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/FileSystemHandler.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/CodeAssistant.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/CodeAssistant/WidgetConverter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ClientLoader.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Changelog.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Cache/CachedMethods.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/CodeAssistant.php</exclude-pattern>
        <exclude-pattern>*/compatibility/ActionCapture.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/Bootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/BootstrapCI3.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrapCI3.php</exclude-pattern>
    </rule>
    <rule ref="Squiz.Classes.ClassFileName.NoMatch">
        <exclude-pattern>*/core/framework/Controllers/Admin/WidgetConverter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/CodeAssistant.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/CodeAssistant/WidgetConverter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/OpenLogin.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/*</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/AsyncBase.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/PhpFunctional.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/classes/Helper.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/classes/reporters/RegularReporter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/classes/reporters/TapReporter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Hooks/Clickstream.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Widget/Base.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Session.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/ResponseObject.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/ConnectTabular.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/GuidedAssistance.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Cache/PersistentReadThroughCache.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Asynchronous.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/SearchMappers/BaseMapper.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Widget/Builder.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ThemeParser.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Deployer.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/TagDefinitions.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Staging.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/SandboxedConfigs.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Resolvers.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Logging.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/HeaderBuilder/Development.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/HeaderBuilder/Reference.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/FileSystemHandler.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ClientLoader.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Changelog.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Cache/CachedMethods.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/CodeAssistant.php</exclude-pattern>
        <exclude-pattern>*/controller.php</exclude-pattern>
        <exclude-pattern>*/viewHelper.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Helpers/*</exclude-pattern>
        <exclude-pattern>*/customer/development/helpers/*</exclude-pattern>
        <exclude-pattern>*/compatibility/ActionCapture.php</exclude-pattern>
        <exclude-pattern>*/compatibility/Mappings/Classes.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/Bootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/tarball/BootstrapCI3.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrap.php</exclude-pattern>
        <exclude-pattern>*/util/versionsCron/VersionBootstrapCI3.php</exclude-pattern>
    </rule>

    <rule ref="Squiz.Commenting.ClassComment.TagNotAllowed">
        <exclude-pattern>*/core/framework/Models/AsyncBase.php</exclude-pattern>
    </rule>

    <!-- Some files have class constants that we can't change for compat reasons -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase">
        <exclude-pattern>*/core/framework/Controllers/Base.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/Page.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/AsyncBase.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/PhpFunctional.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ClientLoader.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Deployer.php</exclude-pattern>
    </rule>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase">
        <exclude-pattern>*/core/framework/Controllers/Base.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/Page.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/AsyncBase.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/UnitTest/PhpFunctional.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ClientLoader.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/ThemeParser.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Deployer.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Views/Admin/template.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/chat/ChatHours/view.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/input/ContactNameInput/controller.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/output/ContactNameDisplay/view.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/input/QuestionComments/view.php</exclude-pattern>
    </rule>


    <!-- For documentation purposes, we allow some places to have method overrides which technically don't do anything -->
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod.Found">
        <exclude-pattern>*/core/framework/Libraries/Widget/Base.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/ClientLoader.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Cache/PersistentReadThroughCache.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Exception.php</exclude-pattern>
        <exclude-pattern>*/controller.php</exclude-pattern>
        <exclude-pattern>*/customer/development/controllers/AjaxCustom.php</exclude-pattern>
        <exclude-pattern>*/customer/development/models/custom/ExtendedSample.php</exclude-pattern>
        <exclude-pattern>*/customer/development/models/custom/MySocialSearch.php</exclude-pattern>
        <exclude-pattern>*/customer/development/models/custom/Sample.php</exclude-pattern>
        <exclude-pattern>*/compatibility/ActionCapture.php</exclude-pattern>
        <exclude-pattern>*/compatibility/Mappings/Classes.php</exclude-pattern>
    </rule>

    <!-- Our sample AdditionalResults widget uses Framework::logMessage -->
    <rule ref="CPStandard.PHP.ForbiddenFunctions">
        <exclude-pattern>*/extras/samples/AdditionalResults/1.0/controller.php</exclude-pattern>
    </rule>

    <!-- Some variables should be constants, but cannot, and therefore break our camelCase rule -->
    <rule ref="CPStandard.NamingConventions.ValidVariableName">
        <exclude-pattern>*/core/framework/Internal/Utils/Tags.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Libraries/Widget/Base.php</exclude-pattern>
    </rule>

    <!-- Allow existing uses of eval -->
    <rule ref="Squiz.PHP.Eval.Discouraged">
        <exclude-pattern>*/core/framework/Internal/Libraries/Widget/Base.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Widget/ViewPartials/SharedPartial.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/Widgets.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/SandboxedConfigs.php</exclude-pattern>
    </rule>

    <!-- We use print_r instead of var_export otherwise we run into recursion errors while logging SocialUsers -->
    <rule ref="Squiz.PHP.DiscouragedFunctions.Discouraged">
        <exclude-pattern>*/core/framework/Internal/Utils/DevelopmentLogger.php</exclude-pattern>
    </rule>

    <!-- The PageSetMapping class has a __call method which must take the arguments provided, but it doesn't use them -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.Found">
        <exclude-pattern>*/core/framework/Libraries/PageSetMapping.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/searchsource/MobileSourceProductCategorySearchFilter/controller.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/searchsource/SourceProductCategorySearchFilter/controller.php</exclude-pattern>
    </rule>

    <!-- Certain files already have poor methods that need refactoring -->
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <exclude-pattern>*/core/framework/Models/Field.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/Guidedassistance.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/Incident.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/Report.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/Okcs.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/OkcsSearch.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/Opensearch.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/Pta.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Controllers/Admin/WidgetConverter.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Utils/Url.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Utils/Framework.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Utils/Connect.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Hooks/Clickstream.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/Widgets.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Utils/Tags.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Internal/Libraries/Deployer.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/input/TextInput/controller.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/input/RichTextInput/controller.php</exclude-pattern>
        <exclude-pattern>*/core/widgets/standard/discussion/QuestionDetail/controller.php</exclude-pattern>
        <exclude-pattern>*/core/framework/Models/Field.php</exclude-pattern>
    </rule>

    <!-- Damn you report model -->
    <rule ref="Generic.Metrics.NestingLevel.TooHigh">
        <exclude-pattern>*/core/framework/Models/Report.php</exclude-pattern>
    </rule>

    <!-- Allow multiline method chaining -->
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

<!-- CSS Exceptions -->
    <!-- QA made us put in the crazy IE gradient rule, which (understandably) gives us a lot of errors -->
    <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions.Found">
        <exclude-pattern>*/themesPackageSource/standard/widgetCss/NavigationTab.css</exclude-pattern>
    </rule>
    <!-- Some of our CSS files have lots of media sections with duplicate rules and also have reset CSS which is jammed on a single line -->
    <rule ref="Squiz.CSS.DuplicateClassDefinition.Found">
        <exclude-pattern>*/webfiles/assets/themes/standard/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/mobile/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/standard/okcs.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/mobile/okcs.css</exclude-pattern>
        <exclude-pattern>*/themesPackageSource/standard/widgetCss/IncidentThreadDisplay.css</exclude-pattern>
        <exclude-pattern>*/webfiles/core/static/feedbackMobile.css</exclude-pattern>
        <exclude-pattern>*/themesPackageSource/standard/widgetCss/LoginDialog.css</exclude-pattern>
    </rule>
    <rule ref="CPStandard.CSS.DuplicateStyleDefinition.Found">
        <exclude-pattern>*/webfiles/assets/themes/standard/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/mobile/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/core/static/feedbackMobile.css</exclude-pattern>
        <exclude-pattern>*/themesPackageSource/standard/widgetCss/LoginDialog.css</exclude-pattern>
        <exclude-pattern>*/themesPackageSource/standard/widgetCss/BestAnswerDisplay.css</exclude-pattern>
        <exclude-pattern>*/widgets/custom/feedback/CustomAnswerFeedback/1.0/base.css</exclude-pattern>
        <exclude-pattern>*/widgets/custom/feedback/ExtendedCustomAnswerFeedback/1.0/base.css</exclude-pattern>
        <exclude-pattern>*/widgets/custom/viewpartialtest/CustomAnswerFeedback/1.0/base.css</exclude-pattern>
        <exclude-pattern>*/widgets/custom/viewpartialtest/ExtendedCustomAnswerFeedback/1.0/base.css</exclude-pattern>
    </rule>
    <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions.Found">
        <exclude-pattern>*/webfiles/assets/themes/standard/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/mobile/site.css</exclude-pattern>
    </rule>
    <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace.After">
        <exclude-pattern>*/webfiles/assets/themes/standard/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/mobile/site.css</exclude-pattern>
    </rule>
    <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose">
        <exclude-pattern>*/webfiles/assets/themes/standard/site.css</exclude-pattern>
        <exclude-pattern>*/webfiles/assets/themes/mobile/site.css</exclude-pattern>
    </rule>
    <!-- We purposely indent some sections of this file to better show their layout so ignore this rule -->
    <rule ref="Squiz.CSS.Indentation.Incorrect">
        <exclude-pattern>*/webfiles/assets/themes/standard/site.css</exclude-pattern>
    </rule>

<!-- JS Exceptions -->
    <!-- We chose to use an asterisk as an object key -->
    <rule ref="Squiz.Objects.DisallowObjectStringIndex.Found">
        <exclude-pattern>*/extras/samples/DynamicProductCategoryInput/1.0/logic.js</exclude-pattern>
    </rule>
     <!-- Excluded these files during migration to ORTL editor 6.3.2 from CKEditor 4 as ORTL uses arrow function => () for setup & intialization -->
    <rule ref="CPStandard.WhiteSpace.OperatorSpacing.NoSpaceAfter">
        <exclude-pattern>**/core/widgets/standard/input/RichTextInput/logic.js</exclude-pattern>
         <exclude-pattern>**/core/widgets/standard/discussion/QuestionDetail/logic.js</exclude-pattern>
    </rule>
    <rule ref="CPStandard.WhiteSpace.OperatorSpacing.NoSpaceBefore">
        <exclude-pattern>**/core/widgets/standard/input/RichTextInput/logic.js</exclude-pattern>
        <exclude-pattern>**/core/widgets/standard/discussion/QuestionDetail/logic.js</exclude-pattern>
    </rule>
    <rule ref="CPStandard.WhiteSpace.OperatorSpacing.SpacingAfter">
        <exclude-pattern>**/core/widgets/standard/input/RichTextInput/logic.js</exclude-pattern>
        <exclude-pattern>**/core/widgets/standard/discussion/QuestionDetail/logic.js</exclude-pattern>
    </rule>
</ruleset>
